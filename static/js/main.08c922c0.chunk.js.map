{"version":3,"sources":["components/Navbar/MenuItem/MenuItem.module.css","components/Navbar/Navbar.module.css","components/Profile/RightColumn/Description/Status/Status.module.css","components/Users/Users.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Sattings.module.css","components/Decoration/MyButton/MyButton.module.css","components/Profile/ProfileHeader/ProfileHeader.module.css","components/Profile/LeftColumn/LeftColumn.module.css","components/Profile/LeftColumn/Friends/Friends.module.css","components/Profile/RightColumn/RightColumn.module.css","components/Profile/RightColumn/Description/Statistic/StatisticPanel.module.css","components/Decoration/Paginator/Paginator.module.css","utils/enums.ts","reportWebVitals.ts","store/dialogsReducer.ts","api/api.ts","store/profileReducer.ts","store/navbarReducer.ts","store/usersReducer.ts","store/auth-reducer.ts","store/app-reducer.ts","store/store.ts","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Navbar/MenuItem/MenuItem.tsx","components/Navbar/NavbarContainer.tsx","components/Navbar/Navbar.tsx","components/Dialogs/Dialog/DialogItem.tsx","components/Dialogs/Messages/MessageItem.tsx","components/Decoration/FormControl/validator.ts","components/Decoration/FormControl/FormControl.tsx","components/Decoration/MyButton/MyButton.tsx","components/Decoration/FormControl/createField/createField.tsx","components/Dialogs/DialogAddMessageForm/DialogAddMessageForm.tsx","Hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","components/Profile/ProfileHeader/ProfileHeader.tsx","components/Decoration/Preloader/Preloader.tsx","components/Profile/LeftColumn/Avater/Avatar.tsx","components/Profile/LeftColumn/Friends/Friends.tsx","components/Profile/LeftColumn/LeftColumn.tsx","components/Decoration/SuperInput/SuperInput.tsx","components/Profile/RightColumn/Description/Status/Status.tsx","components/Profile/RightColumn/Description/Statistic/StatisticPanel.tsx","components/Profile/RightColumn/Description/Photos/Photos.tsx","components/Profile/RightColumn/Description/Contacts/Contact/Contact.tsx","components/Profile/RightColumn/Description/Contacts/Contacts.tsx","components/Profile/RightColumn/Description/Description.tsx","components/Profile/RightColumn/MyPosts/Post/Post.tsx","components/Profile/RightColumn/MyPosts/AddPostForm/AddPostFormRedux.tsx","components/Profile/RightColumn/MyPosts/MyPosts.tsx","components/Profile/RightColumn/MyPosts/MyPostsContainer.tsx","components/Profile/RightColumn/RightColumn.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","App/logo.jpg","App/authLogo.jpg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Users/User/User.tsx","components/Decoration/Paginator/Paginator.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Login/LoginForm/LoginForm.tsx","components/Login/Login.tsx","App/App.tsx","index.tsx","components/Profile/RightColumn/Description/Contacts/Contact/Contact.module.css","components/Dialogs/Messages/MessageItem.module.css","components/Profile/RightColumn/Description/Contacts/Contacts.module.css","components/Users/User/User.module.css","components/Profile/RightColumn/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Login/Login.module.css","components/Dialogs/Dialogs.module.css","components/Decoration/FormControl/FormControl.module.css","components/Profile/Profile.module.css","components/Profile/LeftColumn/Avater/Avatar.module.css","components/Decoration/Preloader/Preloader.module.css","components/Dialogs/Dialog/DialogItem.module.css","components/Decoration/FormControl/createField/CreateField.module.css","components/Profile/RightColumn/Description/Description.module.css","components/Decoration/SuperInput/SuperInput.module.css","components/Profile/RightColumn/Description/Photos/Photos.module.css","components/Profile/RightColumn/MyPosts/Post/Post.module.css"],"names":["module","exports","ServerResponses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","dialogs","id","v1","name","messages","message","dialogsActions","newMessage","type","instance","axios","create","withCredentials","baseURL","headers","usersAPI","checkedPage","pageSize","get","response","data","userID","post","delete","profileAPI","status","put","file","formData","FormData","append","authAPI","email","password","rememberMe","posts","profile","profileActions","newPostMessage","photos","getProfile","dispatch","navbarItems","title","path","users","totalCount","maxRenderPages","minRenderPages","isLoading","followInProgress","usersActions","userId","login","isAuth","authActions","getAuth","a","resultCode","success","initialized","appActions","rootReducer","combineReducers","app","state","action","profilePage","newPost","dialogsPage","navbar","usersPage","map","u","followed","filter","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","News","props","className","S","news","Music","music","Settings","settings","MenuItem","item","to","activeClassName","activeLink","NavbarContainer","connect","navbarMenuItems","m","nav","menu","DialogItem","dialog","dialog_box","Message","message_box","avatar","src","alt","angle","nickname","time","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","formControl","ValidateTextarea","restProps","textarea","ValidateInput","MyButton","disabled","onClick","style","button","createField","component","placeholder","validate","text","checkbox","textBox","Field","maxLength30","DialogAddMessageReduxFrom","reduxForm","onSubmit","handleSubmit","withAuthRedirect","Component","DialogsContainer","compose","sendMessage","d","dialogs_box","messages_box","addMessage_box","values","ProfileHeader","React","memo","header_box","Preloader","preloader","Avatar","isOwner","updatePhotos","large","changeAvatar_container","input_file","onChange","e","target","files","changeAvatar","htmlFor","Friends","friends","LeftColumn","content","SuperInput","onChangeText","onKeyPress","onEnter","errorClassName","finalInputClassName","errorInput","mainStyle","finalErrorClassName","currentTarget","key","Status","editMode","activateEditMode","setState","deactivateEditMode","updateStatus","onChangeStatus","prevProps","prevState","this","onDoubleClick","autoFocus","onBlur","PureComponent","StatisticPanel","statistic","subs","box","photo","videos","Photos","img_box","Contact","contact_box","href","contact","rel","link","split","l","i","Contacts","contacts","useState","setEditMode","openMode","setOpenMode","useDispatch","editModeHandler","formik","useFormik","initialValues","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","createRequestObject","getState","arr","contactItems","c","Scontact","handleChange","moreInfoButton","moreInfo","open","editButton","Description","description","job","Post","small","AddPostFormRedux","add","MyPosts","p","posts_box","addPost","MyPostsContainer","RightColumn","Profile","left","right","ProfileContainer","refreshProfile","match","params","Number","authUserId","history","push","getStatus","setUserProfile","withRouter","Header","header","logo","logout","HeaderContainer","User","user","unfollow","follow","user_box","loader","blurScreen","info","follow_button","some","Paginator","pageButtonClick","previousButtonClick","nextButtonClick","pageQuantity","Math","ceil","pages","pageButtons","pageCheckedStyle","pageButton","number","pageButtons_container","invisibleButton","Users","userItems","UsersContainer","pageNumber","setCheckedPage","getUsers","setMinRenderPage","setMaxRenderPage","setLoading","setFollowInProgress","items","catch","maxLength35","maxLength20","LoginForm","color","marginBottom","LoginReduxFrom","Login","testData","stopSubmit","_error","LoginContainer","App","initApp","render","Promise","all","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.08c922c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MenuItem_item__3aSv9\",\"activeLink\":\"MenuItem_activeLink__IUiRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__wCzIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__2baJz\",\"title\":\"Status_title__2bJY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3EK-8\",\"title\":\"Users_title__34Nw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__32rcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__2pnOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Sattings_settings__3M1ki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyButton_button__yFaL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_box\":\"ProfileHeader_header_box__OIVtL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"LeftColumn_content__buQFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2zWWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"RightColumn_content__1fisV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"StatisticPanel_statistic__3L6Ed\",\"box\":\"StatisticPanel_box__aoVUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageButtons_container\":\"Paginator_pageButtons_container__29Pjk\",\"pageButton\":\"Paginator_pageButton__2Uiet\",\"number\":\"Paginator_number__2NoAc\",\"pageCheckedStyle\":\"Paginator_pageCheckedStyle__1vYWJ\",\"invisibleButton\":\"Paginator_invisibleButton__17jUD\"};","export enum ServerResponses {\r\n    success = 0,\r\n    error = 1\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {v1} from \"uuid\";\nimport {ActionsTypes} from \"./store\";\n\nconst initialState = {\n    dialogs: [\n        {id: v1(), name: \"Виталик\"},\n        {id: v1(), name: \"Яна\"},\n        {id: v1(), name: \"Ира\"},\n        {id: v1(), name: \"Андрей\"},\n        {id: v1(), name: \"Артур\"}\n    ] as DialogType[],\n    messages: [\n        {id: v1(), message: \"Hi\"},\n        {id: v1(), message: \"How are you?\"},\n        {id: v1(), message: \"What are you doing?\"}\n    ] as MessageType[]\n}\n\nexport const dialogsReducer = (state: DialogPageType = initialState, action: DialogsPageActionsType): DialogPageType => {\n    switch (action.type) {\n        case \"DIALOGS/SEND_MESSAGE\": {\n            let newMessage: MessageType = {\n                id: v1(),\n                message: action.newMessage\n            }\n            return {...state, messages: [...state.messages, newMessage],}\n        }\n        default: return state\n    }\n}\n\n// actions\nexport const dialogsActions = {\n    sendMessage: (newMessage: string) => ({type: \"DIALOGS/SEND_MESSAGE\", newMessage} as const)\n}\n\n// types\nexport type DialogsPageActionsType = ActionsTypes<typeof dialogsActions>\n\nexport type DialogPageType = typeof initialState\nexport type DialogType = {\n    id: string\n    name: string\n}\nexport type MessageType = {\n    id: string\n    message: string\n}","import axios from \"axios\";\r\nimport {PhotosType, UserType} from \"../store/usersReducer\";\r\nimport {ContactsType, UserProfileType} from \"../store/profileReducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"4fe92c3a-1b95-46fb-8296-15a97f910aa4\"}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(checkedPage: number, pageSize: number) {\r\n        return instance.get<GetUsersType>(`users?page=${checkedPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n    followUser(userID: number) {\r\n        return instance.post<ResponseType>(`follow/${userID}`).then(response => response.data)\r\n    },\r\n    unfollowUser(userID: number) {\r\n        return instance.delete<ResponseType>(`follow/${userID}`).then(response => response.data)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userID: number) {\r\n        return instance.get<GetProfileType>(`profile/${userID}`).then(response => response.data)\r\n    },\r\n    getStatus(userID: number) {\r\n        return instance.get<string>(`profile/status/${userID}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ResponseType>(`profile/status`, {status}).then(response => response.data)\r\n    },\r\n    editPhotos(file: File) {\r\n        let formData = new FormData()\r\n        formData.append(\"image\", file)\r\n        return instance.put<ResponseType<{photos: PhotosType}>>(`profile/photo`, formData, {\r\n          headers: {\"Content-Type\": \"multipart/form-data\"}\r\n        }).then(response => response.data)\r\n    },\r\n    updateProfile(data: UpdateProfileDataType) {\r\n        return instance.put<ResponseType<UpdateProfileDataType>>(`profile`, data)\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<AuthMeType>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ResponseType<{userId: number}>>(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType>(`auth/login`)\r\n    }\r\n}\r\n\r\nexport type AuthMeType = {\r\n    data: {\r\n        id: number\r\n        login: string\r\n        email: string\r\n    },\r\n    messages: string[],\r\n    fieldsErrors: string[],\r\n    resultCode: number\r\n}\r\ntype GetUsersType = {\r\n    items: UserType[]\r\n    totalCount: number\r\n    error: string | null\r\n}\r\ntype GetProfileType = UserProfileType\r\n\r\ntype ResponseType<D = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    fieldsErrors: string[]\r\n    data: D\r\n}\r\nexport type UpdateProfileDataType = {\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    contacts: ContactsType\r\n    aboutMe: string\r\n}","import {v1} from \"uuid\";\nimport {profileAPI, UpdateProfileDataType} from \"../api/api\";\nimport {ActionsTypes, AppThunk} from \"./store\";\nimport {PhotosType} from \"./usersReducer\";\nimport {ServerResponses} from \"../utils/enums\";\n\nconst initialState = {\n    posts: [\n        {id: v1(), message: \"Hi\"},\n        {id: v1(), message: \"How are you?\"},\n        {id: v1(), message: \"What are you doing?\"}\n    ] as Array<PostType>,\n    profile: null as UserProfileType | null,\n    status: \"\"\n}\n\nexport const profileReducer = (state: initialStateType = initialState, action: ProfileActionsType): initialStateType => {\n    switch (action.type) {\n        case \"PROFILE/ADD-POST\": {\n            let newPost: PostType = {\n                id: v1(),\n                message: action.newPostMessage\n            }\n            return {...state, posts: [newPost, ...state.posts],}\n        }\n        case \"PROFILE/SET-USER-PROFILE\":\n            return {...state, profile: action.profile}\n        case \"PROFILE/SET-PROFILE-STATUS\":\n            return {...state, status: action.status}\n        case \"PROFILE/SET-PHOTOS\":\n            return {...state, profile: {...state.profile, photos: action.photos} as UserProfileType}\n        default:\n            return state\n    }\n}\n\n// actions\nexport const profileActions = {\n    addPost: (newPostMessage: string) => ({type: \"PROFILE/ADD-POST\", newPostMessage} as const),\n    setUserProfile: (profile: UserProfileType) => ({type: \"PROFILE/SET-USER-PROFILE\", profile} as const),\n    setProfileStatus: (status: string) => ({type: \"PROFILE/SET-PROFILE-STATUS\", status} as const),\n    setPhotos: (photos: PhotosType) => ({type: \"PROFILE/SET-PHOTOS\", photos} as const),\n}\n\n// thunks\nexport const getProfile = (userID: number): AppThunk => (dispatch) => {\n    profileAPI.getProfile(userID).then(response => {\n        dispatch(profileActions.setUserProfile(response))\n    })\n}\nexport const getStatus = (userID: number): AppThunk => (dispatch) => {\n    profileAPI.getStatus(userID).then(response => {\n        dispatch(profileActions.setProfileStatus(response.data))\n    })\n}\nexport const updateStatus = (status: string): AppThunk => (dispatch) => {\n    profileAPI.updateStatus(status).then(response => {\n        if(response.resultCode === ServerResponses.success) {\n            dispatch(profileActions.setProfileStatus(status))\n        }\n    })\n}\nexport const updatePhotos = (file: File): AppThunk => (dispatch) => {\n    profileAPI.editPhotos(file).then(response => {\n        if(response.resultCode === ServerResponses.success) {\n            dispatch(profileActions.setPhotos(response.data.photos))\n        }\n    })\n}\n\nexport const updateProfile = (data: UpdateProfileDataType): AppThunk => (dispatch, getState) => {\n    let userId = getState().profilePage.profile?.userId\n    profileAPI.updateProfile(data)\n        .then(response => {\n            if(response.data.resultCode === ServerResponses.success) {\n                userId && dispatch(getProfile(userId))\n            }\n        })\n}\n\n// types\nexport type PostType = {\n    id: string\n    message: string\n}\nexport type UserProfileType = {\n    aboutMe: string\n    contacts: ContactsType\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    userId: number\n    photos: PhotosType\n}\nexport type ContactsType = {\n    facebook: string\n    website: string\n    vk: string\n    twitter: string\n    instagram: string\n    youtube: string\n    github: string\n    mainLink: string\n}\n\ntype initialStateType = typeof initialState\nexport type ProfileActionsType = ActionsTypes<typeof profileActions>","import {v1} from \"uuid\";\n\nconst initialState = {\n    navbarItems: [\n        {id: v1(), title: \"✓ Profile\", path: \"profile\"},\n        {id: v1(), title: \"✉ Messages\", path: \"dialogs\"},\n        {id: v1(), title: \"☖ News\", path: \"news\"},\n        {id: v1(), title: \"♫ Music\", path: \"music\"},\n        {id: v1(), title: \"✱ Settings\", path: \"settings\"},\n        {id: v1(), title: \"☯ Users\", path: \"users\"}\n    ] as NavbarType[]\n}\n\nexport const navbarReducer = (state: NavbarMenuType = initialState, action: NavbarActionsType) => {\n    return state;\n}\n\n// types\nexport type NavbarType = {\n    id: string\n    title: string\n    path: string\n}\nexport type NavbarMenuType = typeof initialState\nexport type NavbarActionsType = any\n","import {usersAPI} from \"../api/api\";\r\nimport {ActionsTypes, AppThunk} from \"./store\";\r\nimport {ServerResponses} from \"../utils/enums\";\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    totalCount: 0,\r\n    pageSize: 5,\r\n    checkedPage: 1,\r\n    maxRenderPages: 5,\r\n    minRenderPages: 0,\r\n    isLoading: false,\r\n    followInProgress: [] as number[]\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: UsersPageActionsType): UsersPageType => {\r\n    switch (action.type) {\r\n        case \"USERS/FOLLOW\":\r\n            return {...state,\r\n                users: state.users.map(u => {\r\n                    u.id === action.userID && (u.followed = true)\r\n                    return u\r\n                })\r\n            }\r\n        case \"USERS/UNFOLLOW\":\r\n            return {...state,\r\n                users: state.users.map(u => {\r\n                    u.id === action.userID && (u.followed = false)\r\n                    return u\r\n                })\r\n            }\r\n        case \"USERS/SET-USERS\":\r\n            return {...state, users: action.users }\r\n        case \"USERS/SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"USERS/SET-CHECKED-PAGE\":\r\n            return {...state, checkedPage: action.checkedPage}\r\n        case \"USERS/SET-MIN-RENDER-PAGE\":\r\n            return {...state, minRenderPages: action.minRenderPages}\r\n        case \"USERS/SET-MAX-RENDER-PAGE\":\r\n            return {...state, maxRenderPages: action.maxRenderPages}\r\n        case \"USERS/SET-LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        case \"USERS/SET-FOLLOW-IN-PROGRESS\":\r\n            return {...state,\r\n                followInProgress: action.isLoading\r\n                    ? [...state.followInProgress, action.userID]\r\n                    : state.followInProgress.filter(id => id !== action.userID)\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const usersActions = {\r\n    followSuccess: (userID: number) => ({type: \"USERS/FOLLOW\", userID} as const),\r\n    unfollowSuccess: (userID: number) => ({type: \"USERS/UNFOLLOW\", userID} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: \"USERS/SET-USERS\", users} as const),\r\n    setTotalCount: (totalCount: number) => ({type: \"USERS/SET-TOTAL-COUNT\", totalCount} as const),\r\n    setCheckedPage: (checkedPage: number) => ({type: \"USERS/SET-CHECKED-PAGE\", checkedPage} as const),\r\n    setMaxRenderPage: (maxRenderPages: number) => ({type: \"USERS/SET-MAX-RENDER-PAGE\", maxRenderPages} as const),\r\n    setMinRenderPage: (minRenderPages: number) => ({type: \"USERS/SET-MIN-RENDER-PAGE\", minRenderPages} as const),\r\n    setLoading: (isLoading: boolean) => ({type: \"USERS/SET-LOADING\", isLoading} as const),\r\n    setFollowInProgress: (userID: number, isLoading: boolean) =>\r\n        ({type: \"USERS/SET-FOLLOW-IN-PROGRESS\", userID, isLoading} as const)\r\n}\r\n\r\n// thunks\r\nexport const getUsers = (checkedPage: number, pageSize: number): AppThunk => (dispatch) => {\r\n    dispatch(usersActions.setLoading(true))\r\n    usersAPI.getUsers(checkedPage, pageSize)\r\n        .then(data => {\r\n            dispatch(usersActions.setLoading(false))\r\n            dispatch(usersActions.setUsers(data.items))\r\n            dispatch(usersActions.setTotalCount(data.totalCount))\r\n        })\r\n        .catch(error => {\r\n            throw error\r\n        })\r\n}\r\nexport const follow = (userID: number): AppThunk => (dispatch) => {\r\n    dispatch(usersActions.setFollowInProgress(userID, true))\r\n    usersAPI.followUser(userID)\r\n        .then(data => {\r\n            if(data.resultCode === ServerResponses.success) {\r\n                dispatch(usersActions.followSuccess(userID))\r\n                dispatch(usersActions.setFollowInProgress(userID, false))\r\n            }\r\n        })\r\n        .catch(error => {\r\n            throw error\r\n        })\r\n}\r\nexport const unfollow = (userID: number): AppThunk => (dispatch) => {\r\n    dispatch(usersActions.setFollowInProgress(userID, true))\r\n    usersAPI.unfollowUser(userID)\r\n        .then(data => {\r\n            if(data.resultCode === ServerResponses.success) {\r\n                dispatch(usersActions.unfollowSuccess(userID))\r\n                dispatch(usersActions.setFollowInProgress(userID, false))\r\n            }\r\n        })\r\n        .catch(error => {\r\n            throw error\r\n        })\r\n}\r\n\r\n// types\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string | null\r\n    photos: PhotosType\r\n    status: string | null\r\n    followed: boolean\r\n}\r\nexport type UsersPageType = typeof initialState\r\n\r\nexport type UsersPageActionsType = ActionsTypes<typeof usersActions>","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {ActionsTypes, AppThunk} from \"./store\";\r\nimport {ServerResponses} from \"../utils/enums\";\r\n\r\nconst initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: AuthUserType = initialState, action: AuthActionType): AuthUserType => {\r\n    switch (action.type) {\r\n        case \"AUTH/SET-USER-DATA\":\r\n            return {...state, ...action.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const authActions = {\r\n    setUserData: (data: AuthUserType) => ({type: \"AUTH/SET-USER-DATA\", data} as const)\r\n}\r\n\r\n// thunks\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunk => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe).then(response => {\r\n        if(response.data.resultCode === ServerResponses.success) {\r\n            dispatch(getAuth())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n            dispatch(stopSubmit(\"Login\", {_error: message}))\r\n        }\r\n    })\r\n}\r\nexport const logout = (): AppThunk => (dispatch) => {\r\n    authAPI.logout().then(response => {\r\n        if(response.data.resultCode === ServerResponses.success) {\r\n            let newUserData: AuthUserType = {\r\n                userId: null,\r\n                email: null,\r\n                login: null,\r\n                isAuth: false\r\n            }\r\n            dispatch(authActions.setUserData(newUserData))\r\n        }\r\n    })\r\n}\r\nexport const getAuth = (): AppThunk<Promise<void>> => async (dispatch) => {\r\n    return authAPI.me().then(response => {\r\n        if (response.data.resultCode === ServerResponses.success) {\r\n            let {id, email, login} = response.data.data\r\n            let newUserData: AuthUserType = {userId: id, email, login, isAuth: true}\r\n            dispatch(authActions.setUserData(newUserData))\r\n        }\r\n    })\r\n}\r\n\r\n// types\r\nexport type AuthActionType = ActionsTypes<typeof authActions>\r\nexport type AuthUserType = typeof initialState","import {getAuth} from \"./auth-reducer\";\r\nimport {ActionsTypes, AppThunk} from \"./store\";\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: AppActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-INITIALIZED\":\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const appActions = {\r\n    setInitialized: () => ({type: \"APP/SET-INITIALIZED\"} as const)\r\n}\r\n\r\n// thunks\r\nexport const initApp = (): AppThunk => (dispatch) => {\r\n    let auth = dispatch(getAuth())\r\n    Promise.all([auth]).then(() => {\r\n        dispatch(appActions.setInitialized())\r\n    })\r\n}\r\n\r\n// types\r\nexport type AppActionsType = ActionsTypes<typeof appActions>\r\ntype AppInitialStateType = typeof initialState","import {combineReducers, createStore, applyMiddleware} from \"redux\"\nimport {DialogsPageActionsType, dialogsReducer} from \"./dialogsReducer\";\nimport {ProfileActionsType, profileReducer} from \"./profileReducer\";\nimport {navbarReducer} from \"./navbarReducer\";\nimport {UsersPageActionsType, usersReducer} from \"./usersReducer\";\nimport {AuthActionType, authReducer} from \"./auth-reducer\";\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\nimport {reducer as formReducer} from \"redux-form\";\nimport {AppActionsType, appReducer} from \"./app-reducer\";\n\n// store\nconst rootReducer = combineReducers({\n    app: appReducer,\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    navbar: navbarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer\n})\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\n// types\nexport type AppStateType = ReturnType<typeof rootReducer>\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, mainAppActionsType>\nexport type mainAppActionsType =\n    ProfileActionsType\n    | AuthActionType\n    | AppActionsType\n    | DialogsPageActionsType\n    | UsersPageActionsType\n\ntype PropType<T> = T extends {[key: string]: infer U} ? U : never\nexport type ActionsTypes<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropType<T>>\n\n//@ts-ignore\nwindow.store = store","import React from \"react\";\nimport S from \"./News.module.css\"\n\ntype NewsPropsType = {\n\n}\n\nexport function News(props: NewsPropsType) {\n    return (\n        <div className={S.news}>\n\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./Music.module.css\";\n\ntype MusicPropsType = {\n\n}\n\nexport function Music(props: MusicPropsType) {\n    return (\n        <div className={S.music}>\n\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./Sattings.module.css\"\n\ntype SettingsPropsType = {\n\n}\n\nexport function Settings(props: SettingsPropsType) {\n    return (\n        <div className={S.settings}>\n\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./MenuItem.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\ntype MenuItemPropsType = {\n    id: string\n    title: string\n    path: string\n}\n\nexport function MenuItem(props: MenuItemPropsType) {\n    let path = \"/\" + props.path;\n    return (\n        <div className={S.item}>\n            <NavLink to={path} activeClassName={S.activeLink}>{props.title}</NavLink>\n        </div>\n    );\n}","import React from 'react';\nimport {Navbar} from \"./Navbar\";\nimport {AppStateType} from \"../../store/store\";\nimport {connect} from \"react-redux\";\nimport {NavbarMenuType} from \"../../store/navbarReducer\";\n\ntype MapStatePropsType = NavbarMenuType\n\n\nexport type NavbarPropsType = MapStatePropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        navbarItems: state.navbar.navbarItems\n    }\n}\nexport const NavbarContainer = connect(mapStateToProps)(Navbar)","import React from 'react';\nimport {MenuItem} from './MenuItem/MenuItem';\nimport S from './Navbar.module.css';\nimport { NavbarPropsType } from './NavbarContainer';\n\nexport function Navbar(props: NavbarPropsType) {\n    const navbarMenuItems = props.navbarItems.map( m =>\n        <MenuItem key={m.id} id={m.id} title={m.title} path={m.path} />)\n    return (\n        <nav className={S.nav}>\n            <div className={S.menu}>\n                {navbarMenuItems}\n            </div>\n        </nav>\n    );\n}","import React from \"react\";\nimport S from \"./DialogItem.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport {DialogType} from \"../../../store/dialogsReducer\";\n\n\nexport function DialogItem(props: DialogType) {\n    let path = \"/dialogs/\" + props.id\n    return (\n        <div className={S.dialog}>\n            <NavLink to={path} activeClassName={S.activeLink}>\n                <div className={S.dialog_box}>\n                    {props.name}\n                </div>\n            </NavLink>\n        </div>\n    );\n}","import React from \"react\";\nimport { MessageType } from \"../../../store/dialogsReducer\";\nimport S from \"./MessageItem.module.css\";\n\nexport function Message(props: MessageType) {\n    return (\n        <div className={S.message_box}>\n            <img className={S.avatar} src=\"https://goo.su/4zdi\" alt=\"\"/>\n            <div className={S.angle}/>\n            <div className={S.message}>\n                <div className={S.nickname}>//--Nickname--//</div>\n                {props.message}\n                <div className={S.time}>//-22:00-//</div>\n            </div>\n        </div>\n    );\n}","export const required = (value: string) => {\r\n    if(value) return undefined\r\n    return \"Invalid data\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport S from \"./FormControl.module.css\"\r\n\r\n//@ts-ignore\r\nconst FormControl = props => {\r\n    const {input, meta: {touched, error}, children, ...restProps} = props\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={`${S.formControl} ${(hasError ? S.error : \"\")}`}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n//@ts-ignore\r\nexport const ValidateTextarea = props => {\r\n    const {input, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea className={S.textarea} {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n//@ts-ignore\r\nexport const ValidateInput = props => {\r\n    const {input, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input className={S.input} {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport S from \"./MyButton.module.css\"\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype MyButtonPropsType = DefaultButtonPropsType & {\r\n    disabled?: boolean\r\n    title?: string\r\n    onClick?: () => void\r\n}\r\n\r\nexport const MyButton: React.FC<MyButtonPropsType> = props => {\r\n    const {title, disabled, children, onClick, className, ...restProps} = props\r\n\r\n    const onclickCallback = () => {\r\n        onClick && onClick()\r\n    }\r\n    const style = `${S.button} ${className}`\r\n    return (\r\n        <>\r\n            <button\r\n                className={style}\r\n                onClick={onclickCallback}\r\n                disabled={disabled}\r\n                {...restProps}\r\n            >\r\n                {children ? children : title}\r\n            </button>\r\n        </>\r\n    );\r\n}","import {ValidateInput, ValidateTextarea} from \"../FormControl\";\r\nimport S from \"./CreateField.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const createField = (name: string, component: Function | string, placeholder?: string,\r\n                            validate?: Function[], type?: string, text?: string) => {\r\n\r\n    const style = () => {\r\n        if(component === ValidateInput) {\r\n            return `${S.input}`\r\n        } else if(type === \"checkbox\") {\r\n            return `${S.checkbox}`\r\n        } else if(component === ValidateTextarea) {\r\n            return `${S.textBox}`\r\n        }\r\n    }\r\n    return (\r\n        <div className={style()}>\r\n            <Field placeholder={placeholder} name={name}\r\n                   component={component} validate={validate || null}\r\n                   type={type || \"\"}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}","import {maxLengthCreator, required} from \"../../Decoration/FormControl/validator\";\r\nimport React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {ValidateTextarea} from \"../../Decoration/FormControl/FormControl\";\r\nimport {MyButton} from \"../../Decoration/MyButton/MyButton\";\r\nimport {createField} from \"../../Decoration/FormControl/createField/createField\";\r\n\r\nexport type MessageFormDataType = {\r\n    newMessage: string\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst DialogAddMessageForm: React.FC<InjectedFormProps<MessageFormDataType>> = props => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {createField(\"newMessage\", ValidateTextarea, \"Enter your message!!!\", [required, maxLength30])}\r\n        <MyButton>Send</MyButton>\r\n    </form>;\r\n}\r\n\r\nexport const DialogAddMessageReduxFrom = reduxForm<MessageFormDataType>({form: \"AddMessage\"})(DialogAddMessageForm)","import React, {Component, ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../store/store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: MapStatePropsType) {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    const mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","import React, {Dispatch} from \"react\";\nimport {DialogPageType, DialogsPageActionsType, dialogsActions} from \"../../store/dialogsReducer\";\nimport {AppStateType} from \"../../store/store\";\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype MapStatePropsType = DialogPageType\n\ntype MapDispatchPropsType = {\n    sendMessage: (newMessage: string) => void\n}\n\nexport type DialogsPagePropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n    }\n}\n\nconst dispatch = (dispatch: Dispatch<DialogsPageActionsType>): MapDispatchPropsType => {\n   return {\n       sendMessage: (newMessage: string) => {\n           dispatch(dialogsActions.sendMessage(newMessage))\n       }\n   }\n}\n\nexport const DialogsContainer = compose<React.ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps, dispatch)\n)(Dialogs)","import React from \"react\";\nimport S from \"./Dialogs.module.css\"\nimport {DialogItem} from \"./Dialog/DialogItem\";\nimport {Message} from \"./Messages/MessageItem\";\nimport {DialogsPagePropsType} from \"./DialogsContainer\";\nimport {DialogAddMessageReduxFrom, MessageFormDataType} from \"./DialogAddMessageForm/DialogAddMessageForm\";\n\nexport function Dialogs(props: DialogsPagePropsType) {\n    const dialogs = props.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>);\n    const messages = props.messages.map(d => <Message key={d.id} id={d.id} message={d.message}/>);\n\n    const sendMessage = (values: MessageFormDataType) => {\n        props.sendMessage(values.newMessage)\n    }\n    return (\n        <div className={S.dialogs}>\n            <div className={S.dialogs_box}>\n                {dialogs}\n            </div>\n            <div className={S.messages_box}>\n                {messages}\n            </div>\n            <div className={S.addMessage_box}>\n                <DialogAddMessageReduxFrom onSubmit={sendMessage}/>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./ProfileHeader.module.css\"\n\nexport const ProfileHeader: React.FC<any> = React.memo(props => {\n    return (\n        <div className={S.header_box}>\n            <img src=\"https://goo.su/4vY0\" alt=\"\"/>\n        </div>\n    );\n})","import React from \"react\";\r\nimport S from \"./Preloader.module.css\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div className={S.preloader}>\r\n            <img src={\"https://goo.su/5SAB\"} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent} from \"react\";\nimport S from \"./Avatar.module.css\"\nimport {UserProfileType} from \"../../../../store/profileReducer\";\nimport {Preloader} from \"../../../Decoration/Preloader/Preloader\";\n\ntype AvatarPropsType = {\n    profile: UserProfileType | null\n    isOwner: boolean\n    updatePhotos: (file: File) => void\n}\nexport const Avatar: React.FC<AvatarPropsType> = React.memo((props) => {\n    const {profile, isOwner, updatePhotos} = props\n    const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\n        if(e.target.files?.length) {\n            debugger\n            updatePhotos(e.target.files[0])\n        }\n    }\n\n    if(!profile) {\n        return <Preloader />\n    }\n    return (\n        <div className={S.avatar}>\n            <img src={profile.photos.large || \"https://goo.su/4zdi\"} alt=\"avatar\"/>\n            {isOwner && <div className={S.changeAvatar_container}>\n                <input type=\"file\" id=\"input_file\"\n                       className={S.input_file} onChange={onChangeAvatar}/>\n                <label className={S.changeAvatar} htmlFor=\"input_file\">Edit</label>\n            </div>}\n        </div>\n    );\n})","import React from \"react\";\nimport S from \"./Friends.module.css\"\n\nexport const Friends: React.FC<any> = React.memo(props => {\n    return (\n        <div className={S.friends}>\n            Friends\n        </div>\n    );\n})","import React from \"react\";\nimport { Avatar } from \"./Avater/Avatar\";\nimport S from \"./LeftColumn.module.css\"\nimport {Friends} from \"./Friends/Friends\";\nimport {UserProfileType} from \"../../../store/profileReducer\";\n\ntype LeftColumnPropsType = {\n    profile: UserProfileType | null\n    isOwner: boolean\n    updatePhotos: (file: File) => void\n}\nexport const LeftColumn: React.FC<LeftColumnPropsType> = React.memo(props => {\n    const {profile, isOwner} = props\n    return (\n        <div className={S.content}>\n            <Avatar profile={profile} isOwner={isOwner} updatePhotos={props.updatePhotos}/>\n            <Friends />\n        </div>\n    );\n})","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport S from \"./SuperInput.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    errorClassName?: string\r\n}\r\n\r\nexport const SuperInput: React.FC<SuperInputPropsType> = (props) => {\r\n    const {type, onChange, onChangeText, onKeyPress, onEnter,\r\n        error, className, errorClassName, ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n    const finalInputClassName = `${error ? S.errorInput : S.mainStyle} ${className}`\r\n    const finalErrorClassName = `${S.error} ${errorClassName || ''}`\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                className={finalInputClassName}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                {...restProps}\r\n            />\r\n            {error && <div className={finalErrorClassName}>{error}</div>}\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, PureComponent} from \"react\";\r\nimport S from \"./Status.module.css\";\r\nimport {SuperInput} from \"../../../../Decoration/SuperInput/SuperInput\";\r\n\r\ntype StatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport class Status extends PureComponent<StatusPropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onChangeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<StatusPropsType>, prevState: Readonly<{}>) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={S.status}>\r\n                {!this.state.editMode &&\r\n                    <div onDoubleClick={this.activateEditMode} className={S.title}>\r\n                        {this.props.status || \"No status\"}\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <SuperInput\r\n                        autoFocus\r\n                        onChange={this.onChangeStatus}\r\n                        onBlur={this.deactivateEditMode}\r\n                        value={this.state.status} type=\"text\"\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport S from \"./StatisticPanel.module.css\";\r\n\r\nexport const StatisticPanel: React.FC<any> = props => {\r\n    return (\r\n        <div className={S.statistic}>\r\n            <div className={`${S.subs} ${S.box}`}>\r\n                <div>0</div>\r\n                <div>Subs</div>\r\n            </div>\r\n            <div className={`${S.news} ${S.box}`}>\r\n                <div>0</div>\r\n                <div>News</div>\r\n            </div>\r\n            <div className={`${S.photo} ${S.box}`}>\r\n                <div>0</div>\r\n                <div>Photos</div>\r\n            </div>\r\n            <div className={`${S.videos} ${S.box}`}>\r\n                <div>0</div>\r\n                <div>Videos</div>\r\n            </div>\r\n            <div className={`${S.friends} ${S.box}`}>\r\n                <div>0</div>\r\n                <div>Music</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Photos.module.css\";\r\n\r\nexport const Photos: React.FC<any> = props => {\r\n    return (\r\n        <div className={S.photos}>\r\n            <div className={S.title}>Photos</div>\r\n            <div className={S.img_box}>\r\n                <img src=\"https://goo.su/4zdi\" alt=\"#\"/>\r\n                <img src=\"https://goo.su/4zdi\" alt=\"#\"/>\r\n                <img src=\"https://goo.su/4zdi\" alt=\"#\"/>\r\n                <img src=\"https://goo.su/4zdi\" alt=\"#\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Contact.module.css\";\r\n\r\ntype ContactPropsType = {\r\n    title: string\r\n    contact: string\r\n}\r\nexport const Contact: React.FC<ContactPropsType> = props => {\r\n    return (\r\n        <div className={S.contact_box}>\r\n            <div className={S.title}>{props.title}</div>\r\n            <a href={props.contact} target={\"_blank\"} rel=\"noreferrer\">\r\n                <div className={S.link}>\r\n                    {(props.contact || \"Null\").split('').map((l, i) => <span key={i}>{l}</span>)}\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport S from \"./Contacts.module.css\";\r\nimport Scontact from \"./Contact/Contact.module.css\";\r\nimport {ContactsType, updateProfile} from \"../../../../../store/profileReducer\";\r\nimport {Contact} from \"./Contact/Contact\";\r\nimport {useFormik} from \"formik\";\r\nimport {MyButton} from \"../../../../Decoration/MyButton/MyButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {UpdateProfileDataType} from \"../../../../../api/api\";\r\nimport { SuperInput } from \"../../../../Decoration/SuperInput/SuperInput\";\r\n\r\ntype ContactsPropsType = {\r\n    contacts: ContactsType\r\n    isOwner: boolean\r\n}\r\n\r\nexport const Contacts: React.FC<ContactsPropsType> = ({contacts, isOwner}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [openMode, setOpenMode] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const openInfoHandler = () => {\r\n        setOpenMode(!openMode)\r\n        if (editMode) {\r\n            setEditMode(false)\r\n        }\r\n    }\r\n    const editModeHandler = () => {setEditMode(!editMode)}\r\n    const createRequestObject = (values: ContactsType): UpdateProfileDataType => {\r\n        return {\r\n            userId: 17320,\r\n            fullName: \"kelek\",\r\n            lookingForAJob: false,\r\n            lookingForAJobDescription: \"Test\",\r\n            contacts: {...values},\r\n            aboutMe: \"Test\"\r\n        }\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {...contacts},\r\n        onSubmit: values => {\r\n            dispatch(updateProfile(createRequestObject(values)))\r\n            editModeHandler()\r\n        },\r\n    })\r\n    const arr = [\"facebook\", \"website\", \"vk\", \"twitter\", \"instagram\", \"youtube\", \"github\", \"mainLink\"]\r\n    const contactItems = arr.map(c => <Contact title={c + \": \"} contact={contacts[c as keyof ContactsType]}/>)\r\n    const form = arr.map(c => {\r\n        return (\r\n            <div className={Scontact.contact_box}>\r\n                <div className={Scontact.title}>{c + \": \"}</div>\r\n                <SuperInput\r\n                    name={c}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values[c as keyof ContactsType]}\r\n                    className={S.input}\r\n                />\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <div className={S.moreInfoButton} onClick={openInfoHandler}>\r\n                <span>{!openMode ? \"Watch more\" : \"Hide info\"}</span>\r\n            </div>\r\n            <div className={`${S.moreInfo} ${openMode && S.open}`}>\r\n                {editMode\r\n                    ? <form onSubmit={formik.handleSubmit}>\r\n                        {isOwner && <MyButton className={S.editButton}>\r\n                            {!editMode ? \"Edit\" : \"Save\"}</MyButton>}\r\n                        {form}\r\n                    </form>\r\n                    : <div>\r\n                        {isOwner && <MyButton className={S.editButton} onClick={editModeHandler}>\r\n                            {!editMode ? \"Edit\" : \"Save\"}\r\n                        </MyButton>}\r\n                        {contactItems}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState} from \"react\";\nimport S from \"./Description.module.css\"\nimport {UserProfileType} from \"../../../../store/profileReducer\";\nimport {Preloader} from \"../../../Decoration/Preloader/Preloader\";\nimport {Status} from \"./Status/Status\";\nimport {StatisticPanel} from \"./Statistic/StatisticPanel\";\nimport {Photos} from \"./Photos/Photos\";\nimport {Contacts} from \"./Contacts/Contacts\";\n\ntype DescriptionPropsType = {\n    profile: UserProfileType | null\n    status: string\n    updateStatus: (status: string) => void\n    isOwner: boolean\n}\n\nexport const Description: React.FC<DescriptionPropsType> = React.memo(props => {\n    const {status, updateStatus} = props\n\n\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div className={S.description}>\n            <div className={S.name}>\n                {props.profile.fullName || \"Information is not defined\"}\n            </div>\n            <Status status={status} updateStatus={updateStatus}/>\n            <div className={S.job}>\n                Looking for a job: {props.profile.lookingForAJob ? \"Yes\" : \"Later\"}\n            </div>\n            <Contacts contacts={props.profile.contacts} isOwner={props.isOwner}/>\n            <StatisticPanel/>\n            <Photos/>\n        </div>\n    );\n})\n\n","import React from 'react';\nimport S from './Post.module.css';\nimport {PhotosType} from \"../../../../../store/usersReducer\";\n\ntype PostPropsType = {\n    message: string\n    photos?: PhotosType\n}\n\nexport const Post: React.FC<PostPropsType> = React.memo(props => {\n    const {message, photos} = props\n    return (\n        <div className={S.item}>\n            <div className={S.avatar}>\n                <img src={photos?.small || \"https://goo.su/4zdi\"} alt=\"\"/>\n            </div>\n            <div className={S.message}>\n                {message}\n            </div>\n        </div>\n    );\n})","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../../Decoration/FormControl/validator\";\r\nimport {ValidateTextarea} from \"../../../../Decoration/FormControl/FormControl\";\r\nimport S from \"../MyPosts.module.css\";\r\nimport {MyButton} from \"../../../../Decoration/MyButton/MyButton\";\r\nimport {createField} from \"../../../../Decoration/FormControl/createField/createField\";\r\n\r\nexport type AddPostFormPropsType = {\r\n    newPostMessage: string\r\n}\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst AddPostForm: React.FC<InjectedFormProps<AddPostFormPropsType>> = props => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {createField(\"newPostMessage\", ValidateTextarea, \"Что нового?)\", [required, maxLength30])}\r\n        <div className={S.add}>\r\n            <MyButton>Add Post</MyButton>\r\n        </div>\r\n    </form>;\r\n}\r\nexport const AddPostFormRedux = reduxForm<AddPostFormPropsType>({form: \"AddPostForm\"})(AddPostForm)","import React from 'react';\nimport S from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\nimport {AddPostFormPropsType, AddPostFormRedux} from \"./AddPostForm/AddPostFormRedux\";\n\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo(props => {\n    const posts = props.posts.map(p => <Post key={p.id} message={p.message} photos={props.photos}/>);\n\n    const addPost = (values: AddPostFormPropsType) => {\n        props.addPost(values.newPostMessage)\n    }\n\n    return (\n        <div className={S.posts_box}>\n            <div className={S.addPost}>\n                <h3>My Posts</h3>\n                <AddPostFormRedux onSubmit={addPost}/>\n            </div>\n            <div className={S.posts}>{posts}</div>\n        </div>\n    );\n})","import React, {Dispatch} from 'react';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../../../../store/store';\nimport {MyPosts} from './MyPosts';\nimport {profileActions, PostType, ProfileActionsType} from \"../../../../store/profileReducer\";\nimport {PhotosType} from \"../../../../store/usersReducer\";\n\n\ntype MapStatePropsType = {\n    posts: Array<PostType>\n    photos?: PhotosType\n}\ntype MapDispatchPropsType = {\n    addPost: (newPostMessage: string) => void\n}\n\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        posts: state.profilePage.posts,\n        photos: state.profilePage.profile?.photos\n    }\n}\n\nconst dispatch = (dispatch: Dispatch<ProfileActionsType>): MapDispatchPropsType => {\n    return {\n        addPost: (newPostMessage: string) => {\n            dispatch(profileActions.addPost(newPostMessage))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, dispatch)(MyPosts)","import React from \"react\";\nimport S from \"./RightColumn.module.css\"\nimport {Description} from \"./Description/Description\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\nimport {UserProfileType} from \"../../../store/profileReducer\";\n\ntype RightColumnPropsType = {\n    profile: UserProfileType | null\n    status: string\n    updateStatus: (status: string) => void\n    isOwner: boolean\n}\n\nexport function RightColumn(props: RightColumnPropsType) {\n    return (\n        <div className={S.content}>\n            <Description profile={props.profile} status={props.status}\n                         updateStatus={props.updateStatus} isOwner={props.isOwner}/>\n            <div><MyPostsContainer/></div>\n        </div>\n    );\n}","import React from 'react';\nimport S from './Profile.module.css';\nimport {ProfileHeader} from \"./ProfileHeader/ProfileHeader\";\nimport {LeftColumn} from \"./LeftColumn/LeftColumn\";\nimport {RightColumn} from './RightColumn/RightColumn';\nimport {UserProfileType} from \"../../store/profileReducer\";\n\ntype ProfilePropsType = {\n    profile: UserProfileType | null\n    status: string\n    updateStatus: (status: string) => void\n    updatePhotos: (file: File) => void\n    isOwner: boolean\n}\n\nexport const Profile: React.FC<ProfilePropsType> = props => {\n    const {profile, isOwner} = props\n\n    return (\n        <div className={S.profile}>\n            <ProfileHeader />\n            <div className={S.content}>\n                <div className={S.left}>\n                    <LeftColumn profile={profile} isOwner={isOwner} updatePhotos={props.updatePhotos}/>\n                </div>\n                <div className={S.right}>\n                    <RightColumn profile={props.profile} status={props.status}\n                                 updateStatus={props.updateStatus} isOwner={isOwner}/>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, {PureComponent} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    updatePhotos,\r\n    updateStatus,\r\n    UserProfileType,\r\n    profileActions\r\n} from \"../../store/profileReducer\";\r\nimport {Profile} from \"./Profile\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends PureComponent<MainProfilePropsType> {\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<MainProfilePropsType>) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    refreshProfile() {\r\n        let userID: number | null = Number(this.props.match.params.userId)\r\n        if(!userID) {\r\n            userID = this.props.authUserId\r\n            if(!userID) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        if (typeof userID === \"number\") {\r\n            this.props.getProfile(userID)\r\n            this.props.getStatus(userID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            updatePhotos={this.props.updatePhotos}\r\n            isOwner={!this.props.match.params.userId}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nconst {setUserProfile} = profileActions\r\nconst dispatch: MapDispatchPropsType = {setUserProfile, getProfile, getStatus, updateStatus, updatePhotos}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, dispatch),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n// types\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: UserProfileType | null\r\n    status: string\r\n    authUserId: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setUserProfile: (profile: UserProfileType) => void\r\n    getProfile: (userID: number) => void\r\n    getStatus: (userID: number) => void\r\n    updateStatus: (status: string) => void\r\n    updatePhotos: (file: File) => void\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\ntype MainProfilePropsType = RouteComponentProps<PathParamsType> & ProfilePropsType","export default __webpack_public_path__ + \"static/media/logo.66b92708.jpg\";","export default __webpack_public_path__ + \"static/media/authLogo.208406da.jpg\";","import React from 'react';\nimport S from './Header.module.css';\nimport logo from '../../App/logo.jpg'\nimport auth from '../../App/authLogo.jpg'\nimport {NavLink} from \"react-router-dom\";\nimport {AuthPropsType} from \"./HeaderContainer\";\n\n\nexport function Header(props: AuthPropsType) {\n    const title = (props.login !== null ? props.login : \"No authorization\")\n        .split('').map( (l, i) => <span key={i}>{l}</span>)\n    return (\n        <header className={S.header}>\n            <div className={S.logo}>\n                <img src={logo} alt=\"logo\"/>\n            </div>\n            <div className={S.title}>\n                {title}\n            </div>\n            <NavLink to=\"/login\">\n                <div className={S.auth}>\n                    {props.isAuth\n                        ? <div className={S.logout} onClick={props.logout}>x</div>\n                        : <img src={auth} alt=\"auth\"/>\n                    }\n                </div>\n            </NavLink>\n        </header>\n    );\n}","import React, {PureComponent} from 'react';\nimport {Header} from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../store/auth-reducer\";\nimport {AppStateType} from \"../../store/store\";\n\n\ntype MapDispatchPropsType = {\n    logout: () => void\n}\ntype MapStatePropsType = {\n    isAuth: boolean\n    login: string | null\n}\n\nexport type AuthPropsType = MapStatePropsType & MapDispatchPropsType\n\nclass HeaderContainer extends PureComponent<AuthPropsType> {\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login\n    }\n}\nconst dispatch: MapDispatchPropsType = {logout}\n\nexport default connect(mapStateToProps, dispatch)(HeaderContainer)","import {UserType} from \"../../../store/usersReducer\";\r\nimport React from \"react\";\r\nimport S from \"./User.module.css\";\r\nimport loader from \"../../Decoration/Preloader/Preloader.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {MyButton} from \"../../Decoration/MyButton/MyButton\";\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    isLoading: boolean\r\n    followInProgress: number[]\r\n    unfollow: (id: number) => void\r\n    follow: (id: number) => void\r\n}\r\nexport const User: React.FC<UserPropsType> = props => {\r\n    const {user, isLoading, followInProgress, unfollow, follow, ...restProps} = props\r\n\r\n    const followCallback = () => {\r\n        user.followed ? unfollow(user.id) : follow(user.id)\r\n    }\r\n    return (\r\n        <div className={`${S.user_box} ${isLoading ? loader.blurScreen : null}`}>\r\n            <div className={S.avatar}>\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <img src={user.photos.small || \"https://goo.su/4zdi\"} alt=\"#\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={S.info}>\r\n                <NavLink to={\"/profile/\" + user.id}>\r\n                    <div className={S.name}>{user.name}</div>\r\n                </NavLink>\r\n                <div className={S.status}>{user.status || \"No status\"}</div>\r\n                <div className={S.follow_button}>\r\n                    <MyButton\r\n                        disabled={followInProgress.some(id => id === user.id)}\r\n                        onClick={followCallback}\r\n                    >\r\n                        {user.followed ? \"Unfollow\" : \"Follow\"}\r\n                    </MyButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Paginator.module.css\";\r\n\r\ntype PaginatorPropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    checkedPage: number\r\n    maxRenderPages: number\r\n    minRenderPages: number\r\n    pageButtonClick: (p: number) => void\r\n    previousButtonClick: () => void\r\n    nextButtonClick: (pageQuantity: number) => void\r\n}\r\nexport const Paginator: React.FC<PaginatorPropsType> = props => {\r\n    const {totalCount, pageSize, checkedPage, maxRenderPages, minRenderPages,\r\n        pageButtonClick, previousButtonClick, nextButtonClick, ...restProps} = props\r\n\r\n    const pageQuantity = Math.ceil(totalCount / pageSize);\r\n    const pages = [];\r\n    for (let i = 1; i <= pageQuantity; i++) {\r\n        pages.push(i);\r\n    }\r\n    const pageButtons = pages.map((p, i) => {\r\n        const pageCheckedStyle = `${S.pageButton} ${checkedPage === p && S.pageCheckedStyle}`\r\n        if (p <= maxRenderPages && p > minRenderPages) {\r\n            return (\r\n                <div key={i} className={pageCheckedStyle} onClick={() => pageButtonClick(p)}>\r\n                    <div className={S.number}>{p}</div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null\r\n        }\r\n\r\n    })\r\n    return (\r\n        <div className={S.pageButtons_container}>\r\n            <div className={`${S.pageButton} ${props.checkedPage === 1 ? S.invisibleButton : null}`}\r\n                 onClick={previousButtonClick}\r\n            >\r\n                <div className={S.number}>Back</div>\r\n            </div>\r\n            {pageButtons}\r\n            <div\r\n                className={`${S.pageButton} ${props.checkedPage >= props.totalCount - 5 ? S.invisibleButton : null}`}\r\n                onClick={() => nextButtonClick(pageQuantity)}\r\n            >\r\n                <div className={S.number}>Next</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Users.module.css\";\r\nimport {UserType} from \"../../store/usersReducer\";\r\nimport {Preloader} from \"../Decoration/Preloader/Preloader\";\r\nimport {User} from \"./User/User\";\r\nimport {Paginator} from \"../Decoration/Paginator/Paginator\";\r\nimport {MyPostsContainer} from \"../Profile/RightColumn/MyPosts/MyPostsContainer\";\r\n\r\ntype UsersPresentationType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    maxRenderPages: number\r\n    minRenderPages: number\r\n    checkedPage: number\r\n    pageButtonClick: (p: number) => void\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    follow: (id: number) => void\r\n    previousButtonClick: () => void\r\n    nextButtonClick: (pageQuantity: number) => void\r\n\r\n    isLoading: boolean\r\n    setLoading: (isLoading: boolean) => void\r\n    followInProgress: number[]\r\n    setFollowInProgress: (userID: number, isLoading: boolean) => void\r\n}\r\n\r\nexport const Users: React.FC<UsersPresentationType> = props => {\r\n    const {users, totalCount, pageSize, checkedPage, maxRenderPages, minRenderPages,\r\n        pageButtonClick, previousButtonClick, nextButtonClick, isLoading, unfollow,\r\n        followInProgress, follow, ...restProps} = props\r\n\r\n    const userItems = users.map(u => {\r\n        return (\r\n            <User key={u.id} user={u} isLoading={isLoading}\r\n                  followInProgress={followInProgress}\r\n                  unfollow={unfollow} follow={follow}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div className={S.users}>\r\n            {props.isLoading && <Preloader/>}\r\n            <h2 className={S.title}>Users</h2>\r\n            {userItems}\r\n            <Paginator\r\n                totalCount={totalCount}\r\n                pageSize={pageSize}\r\n                checkedPage={checkedPage}\r\n                maxRenderPages={maxRenderPages}\r\n                minRenderPages={minRenderPages}\r\n                pageButtonClick={pageButtonClick}\r\n                previousButtonClick={previousButtonClick}\r\n                nextButtonClick={nextButtonClick}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {PureComponent} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {follow, getUsers, unfollow, UsersPageType, usersActions} from \"../../store/usersReducer\";\r\nimport {Users} from \"./Users\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\n\r\ntype MapStatePropsType = UsersPageType\r\ntype MapDispatchPropsType = {\r\n    setCheckedPage: (checkedPage: number) => void\r\n    setLoading: (isLoading: boolean) => void\r\n    setFollowInProgress: (userID: number, isLoading: boolean) => void\r\n    getUsers: (checkedPage: number, pageSize: number) => void\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n\r\n    setMinRenderPage: (minRenderPage: number) => void\r\n    setMaxRenderPage: (maxRenderPage: number) => void\r\n}\r\n\r\nexport type UsersPagePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends PureComponent<UsersPagePropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.checkedPage, this.props.pageSize)\r\n    }\r\n\r\n    pageButtonClick = (pageNumber: number) => {\r\n        this.props.setCheckedPage(pageNumber)\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n    previousButtonClick = () => {\r\n        this.props.setCheckedPage(this.props.checkedPage - 1)\r\n        this.pageButtonClick(this.props.checkedPage - 1)\r\n        if (this.props.checkedPage - 1 === this.props.minRenderPages) {\r\n            this.props.setMinRenderPage(this.props.minRenderPages - 5)\r\n            this.props.setMaxRenderPage(this.props.maxRenderPages - 5)\r\n        }\r\n    }\r\n    nextButtonClick = (pageQuantity: number) => {\r\n        if (this.props.checkedPage < pageQuantity) {\r\n            this.props.setCheckedPage(this.props.checkedPage + 1)\r\n            this.pageButtonClick(this.props.checkedPage + 1)\r\n            if (this.props.checkedPage === this.props.maxRenderPages) {\r\n                this.props.setMinRenderPage(this.props.minRenderPages + 5)\r\n                this.props.setMaxRenderPage(this.props.maxRenderPages + 5)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Users\r\n                totalCount={this.props.totalCount}\r\n                pageSize={this.props.pageSize}\r\n                maxRenderPages={this.props.maxRenderPages}\r\n                minRenderPages={this.props.minRenderPages}\r\n                checkedPage={this.props.checkedPage}\r\n                pageButtonClick={this.pageButtonClick}\r\n                users={this.props.users}\r\n                previousButtonClick={this.previousButtonClick}\r\n                nextButtonClick={this.nextButtonClick}\r\n                isLoading={this.props.isLoading}\r\n                setLoading={this.props.setLoading}\r\n                followInProgress={this.props.followInProgress}\r\n                setFollowInProgress={this.props.setFollowInProgress}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalCount: state.usersPage.totalCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        checkedPage: state.usersPage.checkedPage,\r\n        minRenderPages: state.usersPage.minRenderPages,\r\n        maxRenderPages: state.usersPage.maxRenderPages,\r\n        isLoading: state.usersPage.isLoading,\r\n        followInProgress: state.usersPage.followInProgress\r\n    }\r\n}\r\nconst {setCheckedPage, setMinRenderPage, setMaxRenderPage, setLoading, setFollowInProgress} = usersActions\r\nconst dispatch: MapDispatchPropsType = {\r\n    setCheckedPage, setMinRenderPage, setMaxRenderPage,\r\n    setLoading, setFollowInProgress, getUsers, follow, unfollow\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, dispatch),\r\n    withAuthRedirect\r\n)(UsersContainer)","import {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../Decoration/FormControl/validator\";\r\nimport React from \"react\";\r\nimport S from \"../Login.module.css\";\r\nimport {ValidateInput} from \"../../Decoration/FormControl/FormControl\";\r\nimport {MyButton} from \"../../Decoration/MyButton/MyButton\";\r\nimport {createField} from \"../../Decoration/FormControl/createField/createField\";\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst maxLength35 = maxLengthCreator(35)\r\nconst maxLength20 = maxLengthCreator(20)\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = React.memo(props => {\r\n    const {error, handleSubmit, ...restProps} = props\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>login</h2>\r\n            {createField(\"email\", ValidateInput, \"Email\", [required, maxLength35])}\r\n            {createField(\"password\", ValidateInput, \"Password\", [required, maxLength20], \"password\")}\r\n            {createField(\"password\", \"input\", \"Password\", [], \"checkbox\", \"Remember me\")}\r\n            {error && <div style={{color: \"#e56969\", marginBottom: \"10px\"}}>{error}</div>}\r\n            <div className={S.button}>\r\n                <MyButton>Login</MyButton>\r\n            </div>\r\n        </form>\r\n    )\r\n})\r\nexport const LoginReduxFrom = reduxForm<FormDataType>({form: \"Login\"})(LoginForm)\r\n\r\n","import React from \"react\";\r\nimport S from \"./Login.module.css\"\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../store/auth-reducer\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {FormDataType, LoginReduxFrom} from \"./LoginForm/LoginForm\";\r\n\r\nconst Login: React.FC<LoginPropsType> = React.memo(props => {\r\n    const {login, isAuth, ...restProps} = props\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if(isAuth) return <Redirect to=\"/profile\"/>\r\n    return (\r\n        <>\r\n            <div className={S.testData}>\r\n                <h3>Test data</h3>\r\n                <div>Email: free@samuraijs.com</div>\r\n                <div>Password: free</div>\r\n            </div>\r\n            <div className={S.login}>\r\n                <LoginReduxFrom onSubmit={onSubmit}/>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n})\r\n\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype LoginPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nconst dispatch: MapDispatchToPropsType = {login}\r\nexport const LoginContainer =  connect(mapStateToProps, dispatch)(Login)","import React, {PureComponent} from 'react';\nimport './App.css';\nimport {Route, withRouter} from 'react-router-dom';\nimport {News} from \"../components/News/News\";\nimport {Music} from '../components/Music/Music';\nimport {Settings} from \"../components/Settings/Settings\";\nimport {NavbarContainer} from '../components/Navbar/NavbarContainer';\nimport {DialogsContainer} from '../components/Dialogs/DialogsContainer';\nimport ProfileContainer from \"../components/Profile/ProfileContainer\";\nimport HeaderContainer from '../components/Header/HeaderContainer';\nimport UsersContainer from \"../components/Users/UsersContainer\";\nimport {LoginContainer} from \"../components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initApp} from \"../store/app-reducer\";\nimport {AppStateType} from \"../store/store\";\nimport {Preloader} from \"../components/Decoration/Preloader/Preloader\";\n\ntype AppPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nclass App extends PureComponent<AppPropsType> {\n    componentDidMount() {\n        this.props.initApp()\n    }\n    render() {\n        if(!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer />\n                <NavbarContainer />\n                <div className=\"app-wrapper-content\">\n                    <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                    <Route path=\"/news\" render={() => <News/>}/>\n                    <Route path=\"/music\" render={() => <Music/>}/>\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <LoginContainer/>}/>\n                </div>\n            </div>\n        );\n    }\n}\ntype MapStateToPropsType = {\n    initialized: boolean\n}\ntype MapDispatchToPropsType = {\n    initApp: () => void\n}\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        initialized: state.app.initialized\n    }\n}\nconst dispatch: MapDispatchToPropsType = {initApp}\nexport default compose<React.ComponentType>(withRouter, connect(mapStateToProps, dispatch))(App);\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport {store} from \"./store/store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./App/App\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contact_title__20Xq7\",\"contact_box\":\"Contact_contact_box__15ksy\",\"link\":\"Contact_link__1DdsJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_box\":\"MessageItem_message_box__1P7KO\",\"message\":\"MessageItem_message__2haoH\",\"nickname\":\"MessageItem_nickname__1g2HJ\",\"avatar\":\"MessageItem_avatar__2zx1m\",\"time\":\"MessageItem_time__rHl4T\",\"angle\":\"MessageItem_angle__o-kOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moreInfo\":\"Contacts_moreInfo__FBbG2\",\"open\":\"Contacts_open__1_pSi\",\"editButton\":\"Contacts_editButton__2kLZR\",\"moreInfoButton\":\"Contacts_moreInfoButton__2nOKx\",\"input\":\"Contacts_input__2_9Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_box\":\"User_user_box__ERbh3\",\"avatar\":\"User_avatar__2BeG2\",\"info\":\"User_info__2o69X\",\"name\":\"User_name__3g4DE\",\"status\":\"User_status__1eO1q\",\"follow_button\":\"User_follow_button__1QLyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_box\":\"MyPosts_posts_box__3JDxe\",\"addPost\":\"MyPosts_addPost__h0et1\",\"add\":\"MyPosts_add__ipd7X\",\"posts\":\"MyPosts_posts__34-e_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3OBxX\",\"logo\":\"Header_logo__1eBUw\",\"auth\":\"Header_auth__11Cod\",\"title\":\"Header_title__2fVYD\",\"logout\":\"Header_logout__3eyFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__hG5eE\",\"testData\":\"Login_testData__I_SVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2DAz_\",\"messages_box\":\"Dialogs_messages_box__2F1CF\",\"dialogs_box\":\"Dialogs_dialogs_box__10qbU\",\"addMessage_box\":\"Dialogs_addMessage_box__3oTC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"FormControl_textarea__2VTbG\",\"input\":\"FormControl_input__3axJv\",\"formControl\":\"FormControl_formControl__2sLYg\",\"error\":\"FormControl_error__3xJAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1zMxI\",\"content\":\"Profile_content__iBUqt\",\"left\":\"Profile_left__2MzlM\",\"right\":\"Profile_right__3iLeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2fkso\",\"changeAvatar_container\":\"Avatar_changeAvatar_container__haMJR\",\"input_file\":\"Avatar_input_file__74ADe\",\"changeAvatar\":\"Avatar_changeAvatar__1xw1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__38rH9\",\"rotation\":\"Preloader_rotation__33xeh\",\"blurScreen\":\"Preloader_blurScreen__2IFyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_box\":\"DialogItem_dialog_box__31L2n\",\"dialog\":\"DialogItem_dialog__MUQtu\",\"activeLink\":\"DialogItem_activeLink__35-w8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"CreateField_input__2kptp\",\"button\":\"CreateField_button__1GwsF\",\"checkbox\":\"CreateField_checkbox__3n6Hn\",\"textBox\":\"CreateField_textBox__3aWmD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Description_description__2r7q7\",\"name\":\"Description_name__2gjnk\",\"job\":\"Description_job__3LbsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainStyle\":\"SuperInput_mainStyle__12Umu\",\"errorInput\":\"SuperInput_errorInput__2dE43\",\"error\":\"SuperInput_error__xEjA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photos\":\"Photos_photos__23lfW\",\"img_box\":\"Photos_img_box__3xTIk\",\"title\":\"Photos_title__2mfvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1bhgE\",\"avatar\":\"Post_avatar__FmB8B\",\"message\":\"Post_message__DZgm_\"};"],"sourceRoot":""}