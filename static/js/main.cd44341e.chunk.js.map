{"version":3,"sources":["components/Users/Users.module.css","components/Profile/RightColumn/Description/Description.module.css","components/Dialogs/Messages/MessageItem.module.css","components/Profile/RightColumn/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/Profile/RightColumn/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Decoration/Preloader/Preloader.module.css","components/Dialogs/Dialog/DialogItem.module.css","components/Navbar/MenuItem/MenuItem.module.css","components/Navbar/Navbar.module.css","components/Decoration/MyButton/MyButton.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Sattings.module.css","components/Profile/Profile.module.css","components/Profile/ProfileHeader/ProfileHeader.module.css","components/Profile/LeftColumn/Avater/Avatar.module.css","components/Profile/LeftColumn/LeftColumn.module.css","components/Profile/LeftColumn/Friends/Friends.module.css","components/Profile/RightColumn/RightColumn.module.css","reportWebVitals.ts","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Navbar/MenuItem/MenuItem.tsx","components/Navbar/NavbarContainer.tsx","components/Navbar/Navbar.tsx","redux/dialogsReducer.ts","components/Dialogs/Dialog/DialogItem.tsx","components/Dialogs/Messages/MessageItem.tsx","components/Decoration/MyButton/MyButton.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","redux/profileReducer.ts","components/Profile/ProfileHeader/ProfileHeader.tsx","components/Decoration/Preloader/Preloader.tsx","components/Profile/LeftColumn/Avater/Avatar.tsx","components/Profile/LeftColumn/Friends/Friends.tsx","components/Profile/LeftColumn/LeftColumn.tsx","components/Profile/RightColumn/Description/Description.tsx","components/Profile/RightColumn/MyPosts/Post/Post.tsx","components/Profile/RightColumn/MyPosts/MyPostsContainer.tsx","components/Profile/RightColumn/MyPosts/MyPosts.tsx","components/Profile/RightColumn/RightColumn.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","logo.jpg","authLogo.jpg","components/Header/Header.tsx","redux/auth-reducer.ts","api/api.ts","components/Header/HeaderContainer.tsx","redux/usersReducer.ts","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","redux/navbarReducer.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","News","props","className","S","news","Music","music","Settings","settings","MenuItem","path","item","to","activeClassName","activeLink","title","NavbarContainer","connect","state","navbarItems","navbar","navbarMenuItems","map","m","id","nav","menu","initialState","dialogs","v1","name","messages","message","newMessageText","DialogItem","dialog","dialog_box","Message","message_box","avatar","src","alt","angle","nickname","time","MyButton","disabled","children","onClick","restProps","button_box","button","DialogsContainer","dialogsPage","dispatch","sendMessage","type","onMessageChange","newText","updateMessageTextAC","d","newMessage","React","createRef","dialogs_box","messages_box","addMessage_box","ref","value","onChange","current","placeholder","posts","newPostText","profile","ProfileHeader","header_box","Preloader","preloader","Avatar","photos","large","Friends","friends","LeftColumn","content","Description","description","title_container","information","fullName","status","aboutMe","lookingForAJobDescription","Post","response","like","comment","addPost","updateNewPost","MyPostsContainer","profilePage","p","posts_box","e","currentTarget","add","RightColumn","Profile","ProfileContainer","userID","this","match","params","userId","axios","get","setUserProfile","data","Component","setName","WithRouterContainer","withRouter","Header","login","split","l","i","header","logo","auth","email","isAuth","instance","create","withCredentials","baseURL","headers","usersAPI","checkedPage","pageSize","post","delete","HeaderContainer","resultCode","setUserData","users","totalCount","maxRenderPages","minRenderPages","isLoading","followInProgress","Users","pageQuantity","Math","ceil","pages","push","pageButtons","pageCheckedStyle","pageButton","pageButtonClick","number","u","user_box","loader","blurScreen","small","info","follow_button","some","followed","setFollowInProgress","unfollow","follow","pageButtons_container","invisibleButton","previousButtonClick","nextButtonClick","UsersContainer","pageNumber","setCheckedPage","setLoading","setUsers","items","setMinRenderPage","setMaxRenderPage","setTotalCount","usersPage","App","render","rootReducer","combineReducers","action","newPost","filter","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,SAAW,wBAAwB,OAAS,sBAAsB,KAAO,oBAAoB,KAAO,oBAAoB,OAAS,sBAAsB,cAAgB,6BAA6B,MAAQ,qBAAqB,sBAAwB,qCAAqC,WAAa,0BAA0B,OAAS,sBAAsB,iBAAmB,gCAAgC,gBAAkB,iC,uBCAxdD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,MAAQ,2BAA2B,YAAc,iCAAiC,OAAS,8B,gBCAnND,EAAOC,QAAU,CAAC,YAAc,iCAAiC,QAAU,6BAA6B,SAAW,8BAA8B,OAAS,4BAA4B,KAAO,0BAA0B,MAAQ,6B,gBCA/ND,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,QAAU,sBAAsB,SAAW,uBAAuB,KAAO,mBAAmB,QAAU,wB,uBCAhLD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,6BAA6B,eAAiB,kC,gBCA9JD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,yBAAyB,MAAQ,yB,gBCApGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,wB,mBCAlHD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,SAAW,4BAA4B,WAAa,gC,gBCA/GD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,WAAa,iC,kBCA/GD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,WAAa,+B,kBCA7DD,EAAOC,QAAU,CAAC,IAAM,sB,gBCAxBD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,OAAS,2B,2BCArED,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,WAAa,oC,gBCA/BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,8B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,+B,2HCabC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,wDCFP,SAASQ,EAAKC,GACjB,OACI,qBAAKC,UAAWC,IAAEC,O,qBCFnB,SAASC,EAAMJ,GAClB,OACI,qBAAKC,UAAWC,IAAEG,Q,qBCFnB,SAASC,EAASN,GACrB,OACI,qBAAKC,UAAWC,IAAEK,W,6BCCnB,SAASC,EAASR,GACrB,IAAIS,EAAO,IAAMT,EAAMS,KACvB,OACI,qBAAKR,UAAWC,IAAEQ,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIF,EAAMG,gBAAiBV,IAAEW,WAAtC,SAAmDb,EAAMc,U,gCCGxDC,EAAkBC,aANP,SAACC,GACrB,MAAO,CACHC,YAAaD,EAAME,OAAOD,gBAGK,cACRF,ECZxB,SAAgBhB,GACnB,IAAMoB,EAAkBpB,EAAMkB,YAAYG,KAAK,SAAAC,GAAC,OAC5C,cAACd,EAAD,CAAqBe,GAAID,EAAEC,GAAIT,MAAOQ,EAAER,MAAOL,KAAMa,EAAEb,MAAxCa,EAAEC,OACrB,OACI,qBAAKtB,UAAWC,IAAEsB,IAAlB,SACI,qBAAKvB,UAAWC,IAAEuB,KAAlB,SACKL,S,sBCKXM,EAA+B,CACjCC,QAAS,CACL,CAACJ,GAAIK,eAAMC,KAAM,8CACjB,CAACN,GAAIK,eAAMC,KAAM,sBACjB,CAACN,GAAIK,eAAMC,KAAM,sBACjB,CAACN,GAAIK,eAAMC,KAAM,wCACjB,CAACN,GAAIK,eAAMC,KAAM,mCAErBC,SAAU,CACN,CAACP,GAAIK,eAAMG,QAAS,MACpB,CAACR,GAAIK,eAAMG,QAAS,gBACpB,CAACR,GAAIK,eAAMG,QAAS,wBAExBC,eAAgB,I,kCCvBb,SAASC,EAAWjC,GACvB,IAAIS,EAAO,YAAcT,EAAMuB,GAC/B,OACI,qBAAKtB,UAAWC,IAAEgC,OAAlB,SACI,cAAC,IAAD,CAASvB,GAAIF,EAAMG,gBAAiBV,IAAEW,WAAtC,SACI,qBAAKZ,UAAWC,IAAEiC,WAAlB,SACKnC,EAAM6B,W,qBCPpB,SAASO,EAAQpC,GACpB,OACI,sBAAKC,UAAWC,IAAEmC,YAAlB,UACI,qBAAKpC,UAAWC,IAAEoC,OAAQC,IAAI,sBAAsBC,IAAI,KACxD,qBAAKvC,UAAWC,IAAEuC,QAClB,sBAAKxC,UAAWC,IAAE6B,QAAlB,UACI,qBAAK9B,UAAWC,IAAEwC,SAAlB,8BACC1C,EAAM+B,QACP,qBAAK9B,UAAWC,IAAEyC,KAAlB,+B,6BCFHC,EAAwC,SAAC,GAAwD,IAAvD9B,EAAsD,EAAtDA,MAAO+B,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,QAAYC,EAAe,yDAIzG,OACI,qBAAK/C,UAAWC,IAAE+C,WAAlB,SACI,gDACIhD,UAAWC,IAAEgD,OACbH,QAPY,WACpBA,GAAWA,KAOHF,SAAUA,GAENG,GALR,aAOKF,GAAsBhC,QCVvC,IAkBaqC,EAAmBnC,aAlBR,SAACC,GACrB,MAAO,CACHU,QAASV,EAAMmC,YAAYzB,QAC3BG,SAAUb,EAAMmC,YAAYtB,SAC5BE,eAAgBf,EAAMmC,YAAYpB,mBAGf,SAACqB,GACxB,MAAO,CACHC,YAAa,WACTD,EJ4BD,CAACE,KAAM,kBI1BVC,gBAAiB,SAACC,GACdJ,EJ2BuB,SAACI,GAChC,MAAO,CAACF,KAAM,0BAA2BE,QAASA,GI5BjCC,CAAoBD,QAKTzC,ECzBzB,SAAiBhB,GACpB,IAAM2B,EAAU3B,EAAM2B,QAAQN,KAAK,SAAAsC,GAAC,OAAI,cAAC1B,EAAD,CAAuBV,GAAIoC,EAAEpC,GAAIM,KAAM8B,EAAE9B,MAAxB8B,EAAEpC,OACrDO,EAAW9B,EAAM8B,SAAST,KAAK,SAAAsC,GAAC,OAAI,cAACvB,EAAD,CAAoBb,GAAIoC,EAAEpC,GAAIQ,QAAS4B,EAAE5B,SAA3B4B,EAAEpC,OAEpDqC,EAAaC,IAAMC,YAYzB,OACI,sBAAK7D,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAE6D,YAAlB,SACKpC,IAEL,qBAAK1B,UAAWC,IAAE8D,aAAlB,SACKlC,IAEL,sBAAK7B,UAAWC,IAAE+D,eAAlB,UACI,8BAAK,0BACDC,IAAKN,EACLO,MAAOnE,EAAMgC,eACboC,SAlBQ,WACpB,GAAGR,EAAWS,QAAS,CACnB,IAAMZ,EAAUG,EAAWS,QAAQF,MACnCnE,EAAMwD,gBAAgBC,KAgBda,YAAY,4BAEhB,cAAC,EAAD,CAAUvB,QA1BF,WACba,EAAWS,SACVrE,EAAMsD,eAwBF,2B,iDCFV5B,EAAgC,CAClC6C,MAAO,CACH,CAAChD,GAAIK,eAAMG,QAAS,MACpB,CAACR,GAAIK,eAAMG,QAAS,gBACpB,CAACR,GAAIK,eAAMG,QAAS,wBAExByC,YAAa,GACbC,QAAS,M,mCCxCN,SAASC,KACZ,OACI,qBAAKzE,UAAWC,KAAEyE,WAAlB,SACI,qBAAKpC,IAAI,sBAAsBC,IAAI,O,4CCHxC,SAASoC,KACZ,OACI,qBAAK3E,UAAWC,KAAE2E,UAAlB,SACI,qBAAKtC,IAAK,sBAAuBC,IAAI,gBCE1C,SAASsC,GAAO9E,GACnB,OAAIA,EAAMyE,QAIN,qBAAKxE,UAAWC,KAAEoC,OAAlB,SACI,qBAAKC,IAAKvC,EAAMyE,QAAQM,OAAOC,MAAQhF,EAAMyE,QAAQM,OAAOC,MAAO,sBAAuBxC,IAAI,aAJ3F,cAACoC,GAAD,I,4CCPR,SAASK,KACZ,OACI,qBAAKhF,UAAWC,KAAEgF,QAAlB,qBCID,SAASC,GAAWnF,GACvB,OACI,sBAAKC,UAAWC,KAAEkF,QAAlB,UACI,cAACN,GAAD,CAAQL,QAASzE,EAAMyE,UACvB,cAACQ,GAAD,O,4CCJL,SAASI,GAAYrF,GACxB,OAAIA,EAAMyE,QAIN,qBAAKxE,UAAWC,KAAEoF,YAAlB,SACI,gCACI,sBAAKrF,UAAWC,KAAEqF,gBAAlB,UACI,sBAAMtF,UAAWC,KAAEY,MAAnB,kCACA,sBAAMb,UAAWC,KAAEsF,YAAnB,SAAiCxF,EAAMyE,QAAQgB,SACzCzF,EAAMyE,QAAQgB,SAAW,kCAEnC,sBAAKxF,UAAS,UAAKC,KAAEqF,gBAAP,YAA0BrF,KAAEwF,QAA1C,UACI,sBAAMzF,UAAWC,KAAEY,MAAnB,+CACA,sBAAMb,UAAWC,KAAEsF,YAAnB,SAAiCxF,EAAMyE,QAAQkB,QAAU3F,EAAMyE,QAAQkB,QAAU,iBAErF,sBAAK1F,UAAWC,KAAEqF,gBAAlB,UACI,sBAAMtF,UAAWC,KAAEY,MAAnB,mFACA,sBAAMb,UAAWC,KAAEsF,YAAnB,SAAiCxF,EAAMyE,QAAQmB,0BACzC5F,EAAMyE,QAAQmB,0BAA4B,uCAjBrD,cAAChB,GAAD,I,4CCPR,SAASiB,GAAK7F,GACjB,OACI,sBAAKC,UAAWC,KAAEQ,KAAlB,UACI,qBAAKT,UAAWC,KAAEoC,OAAlB,SACI,qBAAKC,IAAI,sBAAsBC,IAAI,OAEvC,8BACI,qBAAKvC,UAAWC,KAAE6B,QAAlB,SACK/B,EAAM+B,YAGf,sBAAK9B,UAAWC,KAAE4F,SAAlB,UACI,sBAAK7F,UAAWC,KAAE6F,KAAlB,UACI,qBAAKxD,IAAI,sBAAsBC,IAAI,KACnC,wCAEJ,sBAAKvC,UAAWC,KAAE8F,QAAlB,UACI,qBAAKzD,IAAI,sBAAsBC,IAAI,KACnC,8CCJpB,IAMMa,GAAiC,CAAC4C,QRsDjB,WACnB,MAAO,CAAC1C,KAAM,aQvD+B2C,cRyDpB,SAACzC,GAC1B,MAAO,CAACF,KAAM,uBAAwBE,aQxD7B0C,GAAmBnF,aARR,SAACC,GACrB,MAAO,CACHsD,MAAOtD,EAAMmF,YAAY7B,MACzBC,YAAavD,EAAMmF,YAAY5B,eAKkBnB,GAAzBrC,ECpBzB,SAAiBhB,GACpB,IAAMuE,EAAQvE,EAAMuE,MAAMlD,KAAI,SAAAgF,GAAC,OAAI,cAACR,GAAD,CAAiBtE,GAAI8E,EAAE9E,GAAIQ,QAASsE,EAAEtE,SAA3BsE,EAAE9E,OAahD,OACI,sBAAKtB,UAAWC,KAAEoG,UAAlB,UACI,sBAAKrG,UAAWC,KAAE+F,QAAlB,UACI,0CACA,8BACI,0BACI9B,MAAOnE,EAAMwE,YACbJ,SAbC,SAACmC,GAClB,GAAIA,EAAEC,cAAe,CACjB,IAAM/C,EAAU8C,EAAEC,cAAcrC,MAChCnE,EAAMkG,cAAczC,KAWRa,YAAY,gEAGpB,qBAAKrE,UAAWC,KAAEuG,IAAlB,SACI,cAAC,EAAD,CAAU1D,QAtBV,WACZ/C,EAAMiG,WAqBM,2BAGR,qBAAKhG,UAAWC,KAAEqE,MAAlB,SAA0BA,UCzB/B,SAASmC,GAAY1G,GACxB,OACI,sBAAKC,UAAWC,KAAEkF,QAAlB,UACI,cAACC,GAAD,CAAaZ,QAASzE,EAAMyE,UAC5B,cAAC0B,GAAD,OCHL,SAASQ,GAAQ3G,GACpB,OACI,sBAAKC,UAAWC,IAAEkF,QAAlB,UACI,cAACV,GAAD,IACA,cAACS,GAAD,CAAYV,QAASzE,EAAMyE,UAC3B,cAACiC,GAAD,CAAajC,QAASzE,EAAMyE,a,ICOlCmC,G,uKACF,WAAqB,IAAD,OACZC,EAASC,KAAK9G,MAAM+G,MAAMC,OAAOC,OACjCJ,IACAA,EAAS,KAEbK,IAAMC,IAAI,wDAA0DN,GAC/DpH,MAAK,SAAAqG,GACF,EAAK9F,MAAMoH,eAAetB,EAASuB,W,oBAI/C,WACI,OAAO,cAACV,GAAD,CAASlC,QAASqC,KAAK9G,MAAMyE,c,GAbbZ,IAAMyD,WAuB/BjE,GAAiC,CAACkE,QZsCjB,SAAC9B,GACpB,MAAO,CAAClC,KAAM,WAAYkC,aYvCmB2B,eZyCnB,SAAC3C,GAC3B,MAAO,CAAClB,KAAM,mBAAoBkB,aYxChC+C,GAAsBC,YAAWb,IAExB5F,gBAVS,SAACC,GACrB,MAAO,CACHwD,QAASxD,EAAMmF,YAAY3B,WAQKpB,GAAzBrC,CAAmCwG,I,oBClDnC,OAA0B,iCCA1B,OAA0B,qCCQlC,SAASE,GAAO1H,GACnB,IAAMc,GAAS,SAAWd,EAAM2H,OAAOC,MAAM,IAAIvG,KAAK,SAACwG,EAAGC,GAAJ,OAAU,+BAAeD,GAAJC,MAC3E,OACI,yBAAQ7H,UAAWC,KAAE6H,OAArB,UACI,qBAAK9H,UAAWC,KAAE8H,KAAlB,SACI,qBAAKzF,IAAKyF,GAAMxF,IAAI,WAExB,qBAAKvC,UAAWC,KAAEY,MAAlB,SACKA,IAEL,cAAC,IAAD,CAASH,GAAG,QAAZ,SACI,qBAAKV,UAAWC,KAAE+H,KAAlB,SACI,qBAAK1F,IAAK0F,GAAMzF,IAAI,gBCXxC,IAAMd,GAAyB,CAC3BuF,OAAQ,KACRiB,MAAO,KACPP,MAAO,KACPQ,QAAQ,GCXNC,GAAWlB,IAAMmB,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAC,UAAW,0CAGZC,GAAW,SACXC,EAAqBC,GAC1B,OAAOP,GAASjB,IAAT,qBAA2BuB,EAA3B,kBAAgDC,IAAYlJ,MAAK,SAAAqG,GAAQ,OAAIA,EAASuB,SAFxFoB,GAAW,SAIT5B,GACP,OAAOuB,GAASQ,KAAT,iBAAwB/B,IAAUpH,MAAK,SAAAqG,GAAQ,OAAIA,EAASuB,SAL9DoB,GAAW,SAOP5B,GACT,OAAOuB,GAASS,OAAT,iBAA0BhC,IAAUpH,MAAK,SAAAqG,GAAQ,OAAIA,EAASuB,SARhEoB,GAAW,WAWhB,OAAOL,GAASjB,IAAT,WAAwB1H,MAAK,SAAAqG,GAAQ,OAAIA,EAASuB,SCD3DyB,G,uKACF,WAAqB,IAAD,OAChBL,KAAoBhJ,MAAK,SAAA4H,GACrB,GAAwB,IAApBA,EAAK0B,WAAkB,CAAC,IAAD,EACE1B,EAAKA,KAAzB9F,EADkB,EAClBA,GAAI2G,EADc,EACdA,MAAOP,EADO,EACPA,MAChB,EAAK3H,MAAMgJ,YAAYzH,EAAI2G,EAAOP,S,oBAK9C,WACI,OAAO,cAACD,GAAD,eAAYZ,KAAK9G,Y,GAXF6D,IAAMyD,WAqB9BjE,GAAiC,CAAC2F,YFVb,SAAC/B,EAAgBiB,EAAeP,GACvD,MAAO,CAACpE,KAAM,gBAAiB8D,KAAM,CAACJ,SAAQiB,QAAOP,YEW1C3G,gBARS,SAACC,GACrB,MAAO,CACHkH,OAAQlH,EAAMgH,KAAKE,OACnBR,MAAO1G,EAAMgH,KAAKN,SAKctE,GAAzBrC,CAAmC8H,IClBrCpH,GAA8B,CACvCuH,MAAO,GACPC,WAAY,EACZP,SAAU,EACVD,YAAa,EACbS,eAAgB,EAChBC,eAAgB,EAChBC,WAAW,EACXC,iBAAkB,I,mBCJf,SAASC,GAAMvJ,GAGlB,IAFA,IAAMwJ,EAAeC,KAAKC,KAAK1J,EAAMkJ,WAAalJ,EAAM2I,UAClDgB,EAAQ,GACL7B,EAAI,EAAGA,GAAK0B,EAAc1B,IAC/B6B,EAAMC,KAAK9B,GAEf,IAAM+B,EAAcF,EAAMtI,KAAI,SAACgF,EAAGyB,GAC9B,IAAMgC,EAAgB,UAAM5J,KAAE6J,WAAR,YAAsB/J,EAAM0I,cAAgBrC,GAAKnG,KAAE4J,kBACzE,OAAIzD,GAAKrG,EAAMmJ,gBAAkB9C,EAAIrG,EAAMoJ,eAEnC,qBAAanJ,UAAW6J,EAAkB/G,QAAS,kBAAM/C,EAAMgK,gBAAgB3D,IAA/E,SACI,qBAAKpG,UAAWC,KAAE+J,OAAlB,SAA2B5D,KADrByB,GAKP,QAITmB,EAAQjJ,EAAMiJ,MAAM5H,KAAI,SAAA6I,GAiB1B,OACI,sBAAgBjK,UAAS,UAAKC,KAAEiK,SAAP,YAAmBnK,EAAMqJ,UAAYe,KAAOC,WAAa,MAAlF,UACI,qBAAKpK,UAAWC,KAAEoC,OAAlB,SACI,cAAC,IAAD,CAAS3B,GAAI,YAAcuJ,EAAE3I,GAA7B,SACI,qBAAKgB,IAAK2H,EAAEnF,OAAOuF,MAAQJ,EAAEnF,OAAOuF,MAAQ,sBAAuB9H,IAAI,UAG/E,sBAAKvC,UAAWC,KAAEqK,KAAlB,UACI,cAAC,IAAD,CAAS5J,GAAI,YAAcuJ,EAAE3I,GAA7B,SACI,qBAAKtB,UAAWC,KAAE2B,KAAlB,SAAyBqI,EAAErI,SAE/B,qBAAK5B,UAAWC,KAAEwF,OAAlB,SAA2BwE,EAAExE,OAASwE,EAAExE,OAAS,cACjD,qBAAKzF,UAAWC,KAAEsK,cAAlB,SACI,cAAC,EAAD,CACI3H,SAAU7C,EAAMsJ,iBAAiBmB,MAAK,SAAAlJ,GAAE,OAAIA,IAAO2I,EAAE3I,MACrDwB,QA/BG,WAChBmH,EAAEQ,UACD1K,EAAM2K,oBAAoBT,EAAE3I,IAAI,GAChCkH,GAAsByB,EAAE3I,IAAI9B,MAAK,SAAA4H,GACT,IAApBA,EAAK0B,YAAoB/I,EAAM4K,SAASV,EAAE3I,IAC1CvB,EAAM2K,oBAAoBT,EAAE3I,IAAI,QAGpCvB,EAAM2K,oBAAoBT,EAAE3I,IAAI,GAChCkH,GAAoByB,EAAE3I,IAAI9B,MAAK,SAAA4H,GACP,IAApBA,EAAK0B,YAAoB/I,EAAM6K,OAAOX,EAAE3I,IACxCvB,EAAM2K,oBAAoBT,EAAE3I,IAAI,QAkB5B,SAIK2I,EAAEQ,SAAW,WAAa,kBAhBjCR,EAAE3I,OAuBpB,OACI,sBAAKtB,UAAWC,KAAE+I,MAAlB,UACKjJ,EAAMqJ,WAAa,cAACzE,GAAD,IACpB,oBAAI3E,UAAWC,KAAEY,MAAjB,mBACCmI,EACD,sBAAKhJ,UAAWC,KAAE4K,sBAAlB,UACI,qBAAK7K,UAAS,UAAKC,KAAE6J,WAAP,YAA2C,IAAtB/J,EAAM0I,YAAoBxI,KAAE6K,gBAAkB,MAC5EhI,QAAS/C,EAAMgL,oBADpB,SAGI,qBAAK/K,UAAWC,KAAE+J,OAAlB,oBAEHJ,EACD,qBACI5J,UAAS,UAAKC,KAAE6J,WAAP,YAAqB/J,EAAM0I,aAAe1I,EAAMkJ,WAAa,EAAIhJ,KAAE6K,gBAAkB,MAC9FhI,QAAS,kBAAM/C,EAAMiL,gBAAgBzB,IAFzC,SAII,qBAAKvJ,UAAWC,KAAE+J,OAAlB,0B,IC9EdiB,G,4MAUFlB,gBAAkB,SAACmB,GACf,EAAKnL,MAAMoL,eAAeD,GAC1B,EAAKnL,MAAMqL,YAAW,GACtB5C,GAAkB0C,EAAY,EAAKnL,MAAM2I,UACpClJ,MAAK,SAAA4H,GACF,EAAKrH,MAAMqL,YAAW,GACtB,EAAKrL,MAAMsL,SAASjE,EAAKkE,W,EAGrCP,oBAAsB,WAClB,EAAKhL,MAAMoL,eAAe,EAAKpL,MAAM0I,YAAc,GACnD,EAAKsB,gBAAgB,EAAKhK,MAAM0I,YAAc,GAC1C,EAAK1I,MAAM0I,YAAc,IAAM,EAAK1I,MAAMoJ,iBAC1C,EAAKpJ,MAAMwL,iBAAiB,EAAKxL,MAAMoJ,eAAiB,GACxD,EAAKpJ,MAAMyL,iBAAiB,EAAKzL,MAAMmJ,eAAiB,K,EAGhE8B,gBAAkB,SAACzB,GACX,EAAKxJ,MAAM0I,YAAcc,IACzB,EAAKxJ,MAAMoL,eAAe,EAAKpL,MAAM0I,YAAc,GACnD,EAAKsB,gBAAgB,EAAKhK,MAAM0I,YAAc,GAC1C,EAAK1I,MAAM0I,cAAgB,EAAK1I,MAAMmJ,iBACtC,EAAKnJ,MAAMwL,iBAAiB,EAAKxL,MAAMoJ,eAAiB,GACxD,EAAKpJ,MAAMyL,iBAAiB,EAAKzL,MAAMmJ,eAAiB,M,uDAhCpE,WAAqB,IAAD,OAChBrC,KAAK9G,MAAMqL,YAAW,GACtB5C,GAAkB3B,KAAK9G,MAAM0I,YAAa5B,KAAK9G,MAAM2I,UAAUlJ,MAAK,SAAA4H,GAChE,EAAKrH,MAAMqL,YAAW,GACtB,EAAKrL,MAAMsL,SAASjE,EAAKkE,OACzB,EAAKvL,MAAM0L,cAAcrE,EAAK6B,iB,oBAgCtC,WACI,OACI,cAACK,GAAD,CACIL,WAAYpC,KAAK9G,MAAMkJ,WACvBP,SAAU7B,KAAK9G,MAAM2I,SACrBQ,eAAgBrC,KAAK9G,MAAMmJ,eAC3BC,eAAgBtC,KAAK9G,MAAMoJ,eAC3BV,YAAa5B,KAAK9G,MAAM0I,YACxBsB,gBAAiBlD,KAAKkD,gBACtBf,MAAOnC,KAAK9G,MAAMiJ,MAClB2B,SAAU9D,KAAK9G,MAAM4K,SACrBC,OAAQ/D,KAAK9G,MAAM6K,OACnBG,oBAAqBlE,KAAKkE,oBAC1BC,gBAAiBnE,KAAKmE,gBACtB5B,UAAWvC,KAAK9G,MAAMqJ,UACtBgC,WAAYvE,KAAK9G,MAAMqL,WACvB/B,iBAAkBxC,KAAK9G,MAAMsJ,iBAC7BqB,oBAAqB7D,KAAK9G,MAAM2K,0B,GAvDnB9G,IAAMyD,WA0E7BjE,GAAiC,CACnCwH,OFVkB,SAAChE,GACnB,MAAO,CAACtD,KAAM,SAAUsD,WEShB+D,SFPY,SAAC/D,GACrB,MAAO,CAACtD,KAAM,WAAYsD,WEMRyE,SFJE,SAACrC,GACrB,MAAO,CAAC1F,KAAM,YAAa0F,UEGCyC,cFDH,SAACxC,GAC1B,MAAO,CAAC3F,KAAM,kBAAmB2F,eECjCkC,eFC0B,SAAC1C,GAC3B,MAAO,CAACnF,KAAM,mBAAoBmF,gBEFlB8C,iBFOY,SAACpC,GAC7B,MAAO,CAAC7F,KAAM,sBAAuB6F,mBERHqC,iBFIN,SAACtC,GAC7B,MAAO,CAAC5F,KAAM,sBAAuB4F,mBEJrCkC,WFSsB,SAAChC,GACvB,MAAO,CAAC9F,KAAM,cAAe8F,cEVjBsB,oBFYmB,SAAC9D,EAAgBwC,GAChD,MAAO,CAAC9F,KAAM,yBAA0BsD,SAAQwC,eEVrCrI,gBAnBS,SAACC,GACrB,MAAO,CACHgI,MAAOhI,EAAM0K,UAAU1C,MACvBC,WAAYjI,EAAM0K,UAAUzC,WAC5BP,SAAU1H,EAAM0K,UAAUhD,SAC1BD,YAAazH,EAAM0K,UAAUjD,YAC7BU,eAAgBnI,EAAM0K,UAAUvC,eAChCD,eAAgBlI,EAAM0K,UAAUxC,eAChCE,UAAWpI,EAAM0K,UAAUtC,UAC3BC,iBAAkBrI,EAAM0K,UAAUrC,oBAUFjG,GAAzBrC,CAAmCkK,ICvEnCU,OAjBf,SAAa5L,GACT,OACI,sBAAKC,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAACc,EAAD,IACA,sBAAKd,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOQ,KAAK,WAAWoL,OAAQ,kBAAM,cAAC1I,EAAD,OACrC,cAAC,IAAD,CAAO1C,KAAK,oBAAoBoL,OAAQ,kBAAM,cAAC,GAAD,OAC9C,cAAC,IAAD,CAAOpL,KAAK,QAAQoL,OAAQ,kBAAM,cAAC9L,EAAD,OAClC,cAAC,IAAD,CAAOU,KAAK,SAASoL,OAAQ,kBAAM,cAACzL,EAAD,OACnC,cAAC,IAAD,CAAOK,KAAK,YAAYoL,OAAQ,kBAAM,cAACvL,EAAD,OACtC,cAAC,IAAD,CAAOG,KAAK,SAASoL,OAAQ,kBAAM,cAAC,GAAD,c,SCf7CnK,GAA+B,CACjCR,YAAa,CACT,CAACK,GAAIK,eAAMd,MAAO,iBAAaL,KAAM,WACrC,CAACc,GAAIK,eAAMd,MAAO,kBAAcL,KAAM,WACtC,CAACc,GAAIK,eAAMd,MAAO,cAAUL,KAAM,QAClC,CAACc,GAAIK,eAAMd,MAAO,eAAWL,KAAM,SACnC,CAACc,GAAIK,eAAMd,MAAO,kBAAcL,KAAM,YACtC,CAACc,GAAIK,eAAMd,MAAO,eAAWL,KAAM,WCXrCqL,GAAcC,aAAgB,CAChC3F,YxB0C0B,WAA6F,IAA5FnF,EAA2F,uDAAlES,EAAcsK,EAAoD,uCACtH,OAAQA,EAAOzI,MACX,IAAK,WACD,IAAI0I,EAAoB,CAAC1K,GAAIK,eAAMG,QAASd,EAAMuD,aAClD,OAAO,2BACAvD,GADP,IAEIsD,MAAM,CAAE0H,GAAH,mBAAehL,EAAMsD,QAC1BC,YAAa,KAGrB,IAAK,uBACD,OAAO,2BAAIvD,GAAX,IAAkBuD,YAAawH,EAAOvI,UAE1C,IAAK,WACD,OAAGxC,EAAMwD,QACE,2BAAIxD,GAAX,IAAkBwD,QAAQ,2BAAKxD,EAAMwD,SAAZ,IAAqBgB,SAAUuG,EAAOvG,aAExD,eAAIxE,GAEnB,IAAK,mBACD,OAAO,2BAAIA,GAAX,IAAkBwD,QAASuH,EAAOvH,UACtC,QACI,OAAOxD,IwB/DfmC,Y9BuB0B,WAA2F,IAA1FnC,EAAyF,uDAAjES,EAAcsK,EAAmD,uCACpH,OAAQA,EAAOzI,MACX,IAAK,eACD,IAAIK,EAA0B,CAACrC,GAAIK,eAAMG,QAASd,EAAMe,gBACxD,OAAO,2BACAf,GADP,IAEIa,SAAS,GAAD,mBAAMb,EAAMa,UAAZ,CAAsB8B,IAC9B5B,eAAgB,KAGxB,IAAK,0BACD,OAAO,2BAAIf,GAAX,IAAkBe,eAAgBgK,EAAOvI,UAE7C,QAAS,OAAOxC,I8BnCpBE,ODYyB,WAAsE,IAArEF,EAAoE,uDAA5CS,GAClD,OAAOT,GCZP0K,ULgCwB,WAAwE,IAAvE1K,EAAsE,uDAA9DS,GAAcsK,EAAgD,uCAC/F,OAAQA,EAAOzI,MACX,IAAK,SACD,OAAO,2BACAtC,GADP,IAEIgI,MAAOhI,EAAMgI,MAAM5H,KAAI,SAAA6I,GAInB,OAHGA,EAAE3I,KAAOyK,EAAOnF,SACfqD,EAAEQ,UAAW,GAEVR,OAGnB,IAAK,WACD,OAAO,2BACAjJ,GADP,IAEIgI,MAAOhI,EAAMgI,MAAM5H,KAAI,SAAA6I,GAInB,OAHGA,EAAE3I,KAAOyK,EAAOnF,SACfqD,EAAEQ,UAAW,GAEVR,OAGnB,IAAK,YACD,OAAO,2BAAIjJ,GAAX,IAAkBgI,MAAO+C,EAAO/C,QACpC,IAAK,kBACD,OAAO,2BAAIhI,GAAX,IAAkBiI,WAAY8C,EAAO9C,aACzC,IAAK,mBACD,OAAO,2BAAIjI,GAAX,IAAkByH,YAAasD,EAAOtD,cAC1C,IAAK,sBACD,OAAO,2BAAIzH,GAAX,IAAkBmI,eAAgB4C,EAAO5C,iBAC7C,IAAK,sBACD,OAAO,2BAAInI,GAAX,IAAkBkI,eAAgB6C,EAAO7C,iBAC7C,IAAK,cACD,OAAO,2BAAIlI,GAAX,IAAkBoI,UAAW2C,EAAO3C,YACxC,IAAK,yBACD,OAAO,2BACApI,GADP,IAEIqI,iBAAkB0C,EAAO3C,UAAP,sBACRpI,EAAMqI,kBADE,CACgB0C,EAAOnF,SACnC5F,EAAMqI,iBAAiB4C,QAAO,SAAA3K,GAAE,OAAIA,IAAOyK,EAAOnF,YAEhE,QAAS,OAAO5F,IKxEpBgH,KREuB,WAAuE,IAAtEhH,EAAqE,uDAAnDS,GAAcsK,EAAqC,uCAC7F,OAAQA,EAAOzI,MACX,IAAK,gBACD,OAAO,uCACAtC,GACA+K,EAAO3E,MAFd,IAGIc,QAAQ,IAEhB,QACI,OAAOlH,MQRNkL,GAAQC,aAAYN,IAGjCO,OAAOF,MAAQA,GCXfG,IAAST,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUM,MAAOA,GAAjB,SACI,cAAC,GAAD,QAEUI,SAASC,eAAe,SAO9ClN,M","file":"static/js/main.cd44341e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3EK-8\",\"user_box\":\"Users_user_box__1mds4\",\"avatar\":\"Users_avatar__21K7d\",\"info\":\"Users_info__22S4f\",\"name\":\"Users_name__1mBfH\",\"status\":\"Users_status__jT7n_\",\"follow_button\":\"Users_follow_button__2-jQn\",\"title\":\"Users_title__34Nw-\",\"pageButtons_container\":\"Users_pageButtons_container__1vCNR\",\"pageButton\":\"Users_pageButton__1dI7v\",\"number\":\"Users_number__2TTJJ\",\"pageCheckedStyle\":\"Users_pageCheckedStyle__1xqyM\",\"invisibleButton\":\"Users_invisibleButton__3-G1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Description_description__2r7q7\",\"title_container\":\"Description_title_container__IfmGM\",\"title\":\"Description_title__1un-0\",\"information\":\"Description_information__2iY1k\",\"status\":\"Description_status__EKEaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_box\":\"MessageItem_message_box__1P7KO\",\"message\":\"MessageItem_message__2haoH\",\"nickname\":\"MessageItem_nickname__1g2HJ\",\"avatar\":\"MessageItem_avatar__2zx1m\",\"time\":\"MessageItem_time__rHl4T\",\"angle\":\"MessageItem_angle__o-kOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1bhgE\",\"avatar\":\"Post_avatar__FmB8B\",\"message\":\"Post_message__DZgm_\",\"response\":\"Post_response__f76V-\",\"like\":\"Post_like__2tL7A\",\"comment\":\"Post_comment__3IR4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2DAz_\",\"messages_box\":\"Dialogs_messages_box__2F1CF\",\"dialogs_box\":\"Dialogs_dialogs_box__10qbU\",\"addMessage_box\":\"Dialogs_addMessage_box__3oTC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_box\":\"MyPosts_posts_box__3JDxe\",\"addPost\":\"MyPosts_addPost__h0et1\",\"posts\":\"MyPosts_posts__34-e_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3OBxX\",\"logo\":\"Header_logo__1eBUw\",\"auth\":\"Header_auth__11Cod\",\"title\":\"Header_title__2fVYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__38rH9\",\"rotation\":\"Preloader_rotation__33xeh\",\"blurScreen\":\"Preloader_blurScreen__2IFyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_box\":\"DialogItem_dialog_box__31L2n\",\"dialog\":\"DialogItem_dialog__MUQtu\",\"activeLink\":\"DialogItem_activeLink__35-w8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MenuItem_item__3aSv9\",\"activeLink\":\"MenuItem_activeLink__IUiRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__wCzIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_box\":\"MyButton_button_box__21CoN\",\"button\":\"MyButton_button__yFaL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__32rcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__2pnOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Sattings_settings__3M1ki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__iBUqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_box\":\"ProfileHeader_header_box__OIVtL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2fkso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"LeftColumn_content__buQFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2zWWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"RightColumn_content__1fisV\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport S from \"./News.module.css\"\n\ntype NewsPropsType = {\n\n}\n\nexport function News(props: NewsPropsType) {\n    return (\n        <div className={S.news}>\n\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./Music.module.css\";\n\ntype MusicPropsType = {\n\n}\n\nexport function Music(props: MusicPropsType) {\n    return (\n        <div className={S.music}>\n\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./Sattings.module.css\"\n\ntype SettingsPropsType = {\n\n}\n\nexport function Settings(props: SettingsPropsType) {\n    return (\n        <div className={S.settings}>\n\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./MenuItem.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\ntype MenuItemPropsType = {\n    id: string\n    title: string\n    path: string\n}\n\nexport function MenuItem(props: MenuItemPropsType) {\n    let path = \"/\" + props.path;\n    return (\n        <div className={S.item}>\n            <NavLink to={path} activeClassName={S.activeLink}>{props.title}</NavLink>\n        </div>\n    );\n}","import React from 'react';\nimport {Navbar} from \"./Navbar\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {NavbarMenuType} from \"../../redux/navbarReducer\";\n\ntype MapStatePropsType = NavbarMenuType\ntype MapDispatchPropsType = {}\n\nexport type NavbarPropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        navbarItems: state.navbar.navbarItems\n    }\n}\nconst dispatch: MapDispatchPropsType = () => {}\nexport const NavbarContainer = connect(mapStateToProps, dispatch)(Navbar)","import React from 'react';\nimport {MenuItem} from './MenuItem/MenuItem';\nimport S from './Navbar.module.css';\nimport { NavbarPropsType } from './NavbarContainer';\n\nexport function Navbar(props: NavbarPropsType) {\n    const navbarMenuItems = props.navbarItems.map( m =>\n        <MenuItem key={m.id} id={m.id} title={m.title} path={m.path} />)\n    return (\n        <nav className={S.nav}>\n            <div className={S.menu}>\n                {navbarMenuItems}\n            </div>\n        </nav>\n    );\n}","import {v1} from \"uuid\";\n\nexport type DialogPageType = {\n    dialogs: Array<DialogType>\n    messages: Array<MessageType>\n    newMessageText: string\n}\nexport type DialogType = {\n    id: string\n    name: string\n}\nexport type MessageType = {\n    id: string\n    message: string\n}\n\nconst initialState: DialogPageType = {\n    dialogs: [\n        {id: v1(), name: \"Виталик\"},\n        {id: v1(), name: \"Яна\"},\n        {id: v1(), name: \"Ира\"},\n        {id: v1(), name: \"Андрей\"},\n        {id: v1(), name: \"Артур\"}\n    ],\n    messages: [\n        {id: v1(), message: \"Hi\"},\n        {id: v1(), message: \"How are you?\"},\n        {id: v1(), message: \"What are you doing?\"}\n    ],\n    newMessageText: \"\"\n}\n\nexport type DialogsPageActionsType = ReturnType<typeof addMessageAC> | ReturnType<typeof updateMessageTextAC>\n\nexport const dialogsReducer = (state: DialogPageType = initialState, action: DialogsPageActionsType): DialogPageType => {\n    switch (action.type) {\n        case \"SEND_MESSAGE\": {\n            let newMessage: MessageType = {id: v1(), message: state.newMessageText}\n            return {\n                ...state,\n                messages: [...state.messages, newMessage],\n                newMessageText: \"\"\n            }\n        }\n        case \"UPDATE-NEW-MESSAGE-TEXT\": {\n            return {...state, newMessageText: action.newText}\n        }\n        default: return state\n    }\n}\n\nexport const addMessageAC = () => {\n    return {type: \"SEND_MESSAGE\"} as const\n}\nexport const updateMessageTextAC = (newText: string) => {\n    return {type: \"UPDATE-NEW-MESSAGE-TEXT\", newText: newText} as const\n}","import React from \"react\";\nimport S from \"./DialogItem.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport {DialogType} from \"../../../redux/dialogsReducer\";\n\n\nexport function DialogItem(props: DialogType) {\n    let path = \"/dialogs/\" + props.id\n    return (\n        <div className={S.dialog}>\n            <NavLink to={path} activeClassName={S.activeLink}>\n                <div className={S.dialog_box}>\n                    {props.name}\n                </div>\n            </NavLink>\n        </div>\n    );\n}","import React from \"react\";\nimport { MessageType } from \"../../../redux/dialogsReducer\";\nimport S from \"./MessageItem.module.css\";\n\n\nexport function Message(props: MessageType) {\n    return (\n        <div className={S.message_box}>\n            <img className={S.avatar} src=\"https://goo.su/4zdi\" alt=\"\"/>\n            <div className={S.angle}/>\n            <div className={S.message}>\n                <div className={S.nickname}>//--Nickname--//</div>\n                {props.message}\n                <div className={S.time}>//-22:00-//</div>\n            </div>\n        </div>\n    );\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport S from \"./MyButton.module.css\"\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype MyButtonPropsType = DefaultButtonPropsType & {\r\n    disabled?: boolean\r\n    title?: string\r\n    onClick?: () => void\r\n}\r\n\r\nexport const MyButton: React.FC<MyButtonPropsType> = ({title, disabled, children, onClick, ...restProps}) => {\r\n    const onclickCallback = () => {\r\n        onClick && onClick()\r\n    }\r\n    return (\r\n        <div className={S.button_box}>\r\n            <button\r\n                className={S.button}\r\n                onClick={onclickCallback}\r\n                disabled={disabled}\r\n\r\n                {...restProps}\r\n            >\r\n                {children ? children : title}\r\n            </button>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\nimport {addMessageAC, DialogPageType, DialogsPageActionsType, updateMessageTextAC} from \"../../redux/dialogsReducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\n\ntype MapStatePropsType = DialogPageType\ntype MapDispatchPropsType = {\n    sendMessage: () => void\n    onMessageChange: (newText: string) => void\n}\n\nexport type DialogsPagePropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        newMessageText: state.dialogsPage.newMessageText,\n    }\n}\nconst mapDispatchToProps = (dispatch: (action: DialogsPageActionsType) => void): MapDispatchPropsType => {\n    return {\n        sendMessage: () => {\n            dispatch(addMessageAC())\n        },\n        onMessageChange: (newText: string) => {\n            dispatch(updateMessageTextAC(newText))\n        }\n    }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);","import React from \"react\";\nimport S from \"./Dialogs.module.css\"\nimport {DialogItem} from \"./Dialog/DialogItem\";\nimport {Message} from \"./Messages/MessageItem\";\nimport {DialogsPagePropsType} from \"./DialogsContainer\";\nimport { MyButton } from \"../Decoration/MyButton/MyButton\";\n\nexport function Dialogs(props: DialogsPagePropsType) {\n    const dialogs = props.dialogs.map( d => <DialogItem key={d.id} id={d.id} name={d.name} />);\n    const messages = props.messages.map( d => <Message key={d.id} id={d.id} message={d.message} />);\n\n    const newMessage = React.createRef<HTMLTextAreaElement>()\n    const sendMessage = () => {\n        if(newMessage.current) {\n            props.sendMessage()\n        }\n    }\n    const onMessageChange = () => {\n        if(newMessage.current) {\n            const newText = newMessage.current.value\n            props.onMessageChange(newText)\n        }\n    }\n    return (\n        <div className={S.dialogs}>\n            <div className={S.dialogs_box}>\n                {dialogs}\n            </div>\n            <div className={S.messages_box}>\n                {messages}\n            </div>\n            <div className={S.addMessage_box}>\n                <div><textarea\n                    ref={newMessage}\n                    value={props.newMessageText}\n                    onChange={onMessageChange}\n                    placeholder=\"Enter your message!!!\"/>\n                </div>\n                <MyButton onClick={sendMessage}>Send</MyButton>\n            </div>\n        </div>\n    );\n}","import {v1} from \"uuid\";\n\nexport type PostType = {\n    id: string\n    message: string\n}\n\nexport type UserProfileType = {\n    aboutMe: string\n    contacts: {\n        facebook: string\n        website: string\n        vk: string\n        twitter: string\n        instagram: string\n        youtube: string\n        github: string\n        mainLink: string\n    }\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    userId: number,\n    photos: {\n        small: string\n        large: string\n    }\n}\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    newPostText: string\n\n    profile: UserProfileType | null\n}\n\nconst initialState: ProfilePageType = {\n    posts: [\n        {id: v1(), message: \"Hi\"},\n        {id: v1(), message: \"How are you?\"},\n        {id: v1(), message: \"What are you doing?\"}\n    ],\n    newPostText: \"\",\n    profile: null\n}\n\nexport type ProfilePageActionsType =\n    ReturnType<typeof addPost>\n    | ReturnType<typeof updateNewPost>\n    | ReturnType<typeof setName>\n    | ReturnType<typeof setUserProfile>\n\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfilePageActionsType): ProfilePageType => {\n    switch (action.type) {\n        case \"ADD-POST\": {\n            let newPost: PostType = {id: v1(), message: state.newPostText}\n            return {\n                ...state,\n                posts: [newPost, ...state.posts],\n                newPostText: \"\"\n            }\n        }\n        case \"UPDATE-NEW-POST-TEXT\": {\n            return {...state, newPostText: action.newText}\n        }\n        case \"SET-NAME\":\n            if(state.profile) {\n                return {...state, profile: {...state.profile, fullName: action.fullName}}\n            } else {\n                return {...state}\n            }\n        case \"SET-USER-PROFILE\":\n            return {...state, profile: action.profile}\n        default:\n            return state\n    }\n}\n\nexport const addPost = () => {\n    return {type: \"ADD-POST\"} as const\n}\nexport const updateNewPost = (newText: string) => {\n    return {type: \"UPDATE-NEW-POST-TEXT\", newText} as const\n}\nexport const setName = (fullName: string) => {\n    return {type: \"SET-NAME\", fullName} as const\n}\nexport const setUserProfile = (profile: UserProfileType) => {\n    return {type: \"SET-USER-PROFILE\", profile} as const\n}","import React from \"react\";\nimport S from \"./ProfileHeader.module.css\"\n\nexport function ProfileHeader() {\n    return (\n        <div className={S.header_box}>\n            <img src=\"https://goo.su/4vY0\" alt=\"\"/>\n        </div>\n    );\n}","import React from \"react\";\r\nimport S from \"./Preloader.module.css\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div className={S.preloader}>\r\n            <img src={\"https://goo.su/5SAB\"} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport S from \"./Avatar.module.css\"\nimport {UserProfileType} from \"../../../../redux/profileReducer\";\nimport {Preloader} from \"../../../Decoration/Preloader/Preloader\";\n\ntype AvatarPropsType = {\n    profile: UserProfileType | null\n}\nexport function Avatar(props: AvatarPropsType) {\n    if(!props.profile) {\n        return <Preloader />\n    }\n    return (\n        <div className={S.avatar}>\n            <img src={props.profile.photos.large ? props.profile.photos.large :\"https://goo.su/4zdi\"} alt=\"avatar\"/>\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./Friends.module.css\"\n\nexport function Friends() {\n    return (\n        <div className={S.friends}>\n            Friends\n        </div>\n    );\n}","import React from \"react\";\nimport { Avatar } from \"./Avater/Avatar\";\nimport S from \"./LeftColumn.module.css\"\nimport {Friends} from \"./Friends/Friends\";\nimport {UserProfileType} from \"../../../redux/profileReducer\";\n\ntype LeftColumnPropsType = {\n    profile: UserProfileType | null\n}\nexport function LeftColumn(props: LeftColumnPropsType) {\n    return (\n        <div className={S.content}>\n            <Avatar profile={props.profile}/>\n            <Friends />\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./Description.module.css\"\nimport {UserProfileType} from \"../../../../redux/profileReducer\";\nimport {Preloader} from \"../../../Decoration/Preloader/Preloader\";\n\ntype DescriptionPropsType = {\n    profile: UserProfileType | null\n}\n\nexport function Description(props: DescriptionPropsType) {\n    if(!props.profile) {\n        return <Preloader />\n    }\n    return (\n        <div className={S.description}>\n            <div>\n                <div className={S.title_container}>\n                    <span className={S.title}>Имя: </span>\n                    <span className={S.information}>{props.profile.fullName\n                        ? props.profile.fullName : \"Information is not defined\"}</span>\n                </div>\n                <div className={`${S.title_container} ${S.status}`}>\n                    <span className={S.title}>Статуc: </span>\n                    <span className={S.information}>{props.profile.aboutMe ? props.profile.aboutMe : \"No status\"}</span>\n                </div>\n                <div className={S.title_container}>\n                    <span className={S.title}>Поиск работы: </span>\n                    <span className={S.information}>{props.profile.lookingForAJobDescription\n                        ? props.profile.lookingForAJobDescription : \"Information is not defined\"}</span>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {PostType} from '../../../../../redux/profileReducer';\nimport S from './Post.module.css';\n\nexport function Post(props: PostType) {\n    return (\n        <div className={S.item}>\n            <div className={S.avatar}>\n                <img src=\"https://goo.su/4VXx\" alt=\"\"/>\n            </div>\n            <div>\n                <div className={S.message}>\n                    {props.message}\n                </div>\n            </div>\n            <div className={S.response}>\n                <div className={S.like}>\n                    <img src=\"https://goo.su/4VXX\" alt=\"\"/>\n                    <div>25</div>\n                </div>\n                <div className={S.comment}>\n                    <img src=\"https://goo.su/4x47\" alt=\"\"/>\n                    <div>25</div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../../../../redux/redux-store';\nimport {MyPosts} from './MyPosts';\nimport {addPost, PostType, updateNewPost} from \"../../../../redux/profileReducer\";\n\n\ntype MapStatePropsType = {\n    posts: Array<PostType>\n    newPostText: string\n}\ntype MapDispatchPropsType = {\n    addPost: () => void\n    updateNewPost: (newText: string) => void\n}\n\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\nconst dispatch: MapDispatchPropsType = {addPost, updateNewPost}\n\nexport const MyPostsContainer = connect(mapStateToProps, dispatch)(MyPosts)","import React, {ChangeEvent} from 'react';\nimport S from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\nimport { MyButton } from '../../../Decoration/MyButton/MyButton';\n\nexport function MyPosts(props: MyPostsPropsType) {\n    const posts = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message}/>);\n\n    //----callbacks---//\n    const addPost = () => {\n        props.addPost()\n    }\n\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        if (e.currentTarget) {\n            const newText = e.currentTarget.value\n            props.updateNewPost(newText)\n        }\n    }\n    return (\n        <div className={S.posts_box}>\n            <div className={S.addPost}>\n                <h3>My Posts</h3>\n                <div>\n                    <textarea\n                        value={props.newPostText}\n                        onChange={onPostChange}\n                        placeholder=\"Что нового?)\"\n                    />\n                </div>\n                <div className={S.add}>\n                    <MyButton onClick={addPost}>Add Post</MyButton>\n                </div>\n            </div>\n            <div className={S.posts}>{posts}</div>\n        </div>\n    );\n}","import React from \"react\";\nimport S from \"./RightColumn.module.css\"\nimport {Description} from \"./Description/Description\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\nimport {UserProfileType} from \"../../../redux/profileReducer\";\n\ntype RightColumnPropsType = {\n    profile: UserProfileType | null\n}\n\nexport function RightColumn(props: RightColumnPropsType) {\n    return (\n        <div className={S.content}>\n            <Description profile={props.profile}/>\n            <MyPostsContainer />\n        </div>\n    );\n}","import React from 'react';\nimport S from './Profile.module.css';\nimport {ProfileHeader} from \"./ProfileHeader/ProfileHeader\";\nimport {LeftColumn} from \"./LeftColumn/LeftColumn\";\nimport {RightColumn} from './RightColumn/RightColumn';\nimport {UserProfileType} from \"../../redux/profileReducer\";\n\ntype ProfilePropsType = {\n    profile: UserProfileType | null\n}\n\nexport function Profile(props: ProfilePropsType) {\n    return (\n        <div className={S.content}>\n            <ProfileHeader />\n            <LeftColumn profile={props.profile}/>\n            <RightColumn profile={props.profile}/>\n        </div>\n    );\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {setName, setUserProfile, UserProfileType} from \"../../redux/profileReducer\";\r\nimport {Profile} from \"./Profile\";\r\nimport {RouteComponentProps, withRouter } from \"react-router-dom\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: UserProfileType | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    setName: (fullName: string) => void\r\n    setUserProfile: (profile: UserProfileType) => void\r\n}\r\n\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\r\ntype MainProfilePropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nclass ProfileContainer extends React.Component<MainProfilePropsType> {\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userId\r\n        if(!userID) {\r\n            userID = \"2\"\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userID)\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <Profile profile={this.props.profile} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nconst dispatch: MapDispatchPropsType = {setName, setUserProfile}\r\n\r\nconst WithRouterContainer = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, dispatch)(WithRouterContainer)","export default __webpack_public_path__ + \"static/media/logo.66b92708.jpg\";","export default __webpack_public_path__ + \"static/media/authLogo.208406da.jpg\";","import React from 'react';\nimport S from './Header.module.css';\nimport logo from '../../logo.jpg'\nimport auth from '../../authLogo.jpg'\nimport {NavLink} from \"react-router-dom\";\nimport {AuthPropsType} from \"./HeaderContainer\";\n\n\nexport function Header(props: AuthPropsType) {\n    const title = (\"HELLO \" + props.login).split('').map( (l, i) => <span key={i}>{l}</span>)\n    return (\n        <header className={S.header}>\n            <div className={S.logo}>\n                <img src={logo} alt=\"logo\"/>\n            </div>\n            <div className={S.title}>\n                {title}\n            </div>\n            <NavLink to=\"/auth\">\n                <div className={S.auth}>\n                    <img src={auth} alt=\"auth\"/>\n                </div>\n            </NavLink>\n        </header>\n    );\n}","type AuthActionType = ReturnType<typeof setUserData>\r\n\r\nexport type AuthUser = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: AuthUser = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReduser = (state: AuthUser = initialState, action: AuthActionType): AuthUser => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (userId: number, email: string, login: string) => {\r\n    return {type: \"SET-USER-DATA\", data: {userId, email, login}} as const\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"4fe92c3a-1b95-46fb-8296-15a97f910aa4\"}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(checkedPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${checkedPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n    followUser(userID: number) {\r\n        return instance.post(`follow/${userID}`).then(response => response.data)\r\n    },\r\n    unfollowUser(userID: number) {\r\n        return instance.delete(`follow/${userID}`).then(response => response.data)\r\n    },\r\n    authUser() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    }\r\n}","import React from 'react';\nimport {Header} from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {setUserData} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {usersAPI} from \"../../api/api\";\n\n\ntype MapDispatchPropsType = {\n    setUserData: (userId: number, email: string, login: string) => void\n}\ntype MapStatePropsType = {\n    isAuth: boolean\n    login: string | null\n}\n\nexport type AuthPropsType = MapStatePropsType & MapDispatchPropsType\n\nclass HeaderContainer extends React.Component<AuthPropsType> {\n    componentDidMount() {\n        usersAPI.authUser().then(data => {\n            if (data.resultCode === 0) {\n                let {id, email, login} = data.data\n                this.props.setUserData(id, email, login)\n            }\n        })\n    }\n\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login\n    }\n}\nconst dispatch: MapDispatchPropsType = {setUserData}\n\nexport default connect(mapStateToProps, dispatch)(HeaderContainer)","export type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string | null\r\n    photos: PhotosType\r\n    status: string | null\r\n    followed: boolean\r\n}\r\nexport type UsersPageType = {\r\n    users: Array<UserType>\r\n    totalCount: number\r\n    pageSize: number\r\n    checkedPage: number\r\n    maxRenderPages: number\r\n    minRenderPages: number\r\n    isLoading: boolean\r\n    followInProgress: number[]\r\n}\r\n\r\nexport const initialState: UsersPageType = {\r\n    users: [],\r\n    totalCount: 0,\r\n    pageSize: 5,\r\n    checkedPage: 1,\r\n    maxRenderPages: 5,\r\n    minRenderPages: 0,\r\n    isLoading: false,\r\n    followInProgress: []\r\n}\r\n\r\nexport type UsersPageActionsType =\r\n    ReturnType<typeof follow>\r\n    | ReturnType<typeof unfollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setTotalCount>\r\n    | ReturnType<typeof setCheckedPage>\r\n    | ReturnType<typeof setMaxRenderPage>\r\n    | ReturnType<typeof setMinRenderPage>\r\n    | ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setFollowInProgress>\r\n\r\nexport const usersReducer = (state = initialState, action: UsersPageActionsType): UsersPageType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.userID) {\r\n                        u.followed = true\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if(u.id === action.userID) {\r\n                        u.followed = false\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"SET-USERS\":\r\n            return {...state, users: action.users }\r\n        case \"SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"SET-CHECKED-PAGE\":\r\n            return {...state, checkedPage: action.checkedPage}\r\n        case \"SET-MIN-RENDER-PAGE\":\r\n            return {...state, minRenderPages: action.minRenderPages}\r\n        case \"SET-MAX-RENDER-PAGE\":\r\n            return {...state, maxRenderPages: action.maxRenderPages}\r\n        case \"SET-LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        case \"SET-FOLLOW-IN-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followInProgress: action.isLoading\r\n                    ? [...state.followInProgress, action.userID]\r\n                    : state.followInProgress.filter(id => id !== action.userID)\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const follow = (userID: number) => {\r\n    return {type: \"FOLLOW\", userID} as const\r\n}\r\nexport const unfollow = (userID: number) => {\r\n    return {type: \"UNFOLLOW\", userID} as const\r\n}\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {type: \"SET-USERS\", users} as const\r\n}\r\nexport const setTotalCount = (totalCount: number) => {\r\n    return {type: \"SET-TOTAL-COUNT\", totalCount} as const\r\n}\r\nexport const setCheckedPage = (checkedPage: number) => {\r\n    return {type: \"SET-CHECKED-PAGE\", checkedPage} as const\r\n}\r\nexport const setMaxRenderPage = (maxRenderPages: number) => {\r\n    return {type: \"SET-MAX-RENDER-PAGE\", maxRenderPages} as const\r\n}\r\nexport const setMinRenderPage = (minRenderPages: number) => {\r\n    return {type: \"SET-MIN-RENDER-PAGE\", minRenderPages} as const\r\n}\r\nexport const setLoading = (isLoading: boolean) => {\r\n    return {type: \"SET-LOADING\", isLoading} as const\r\n}\r\nexport const setFollowInProgress = (userID: number, isLoading: boolean) => {\r\n    return {type: \"SET-FOLLOW-IN-PROGRESS\", userID, isLoading} as const\r\n}","import React from \"react\";\r\nimport S from \"./Users.module.css\";\r\nimport loader from \"./../Decoration/Preloader/Preloader.module.css\"\r\nimport {MyButton} from \"../Decoration/MyButton/MyButton\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {Preloader} from \"../Decoration/Preloader/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\ntype UsersPresentationType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    maxRenderPages: number\r\n    minRenderPages: number\r\n    checkedPage: number\r\n    pageButtonClick: (p: number) => void\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    follow: (id: number) => void\r\n    previousButtonClick: () => void\r\n    nextButtonClick: (pageQuantity: number) => void\r\n    isLoading: boolean\r\n    setLoading: (isLoading: boolean) => void\r\n    followInProgress: number[]\r\n    setFollowInProgress: (userID: number, isLoading: boolean) => void\r\n}\r\n\r\nexport function Users(props: UsersPresentationType) {\r\n    const pageQuantity = Math.ceil(props.totalCount / props.pageSize);\r\n    const pages = [];\r\n    for (let i = 1; i <= pageQuantity; i++) {\r\n        pages.push(i);\r\n    }\r\n    const pageButtons = pages.map((p, i) => {\r\n        const pageCheckedStyle = `${S.pageButton} ${props.checkedPage === p && S.pageCheckedStyle}`\r\n        if (p <= props.maxRenderPages && p > props.minRenderPages) {\r\n            return (\r\n                <div key={i} className={pageCheckedStyle} onClick={() => props.pageButtonClick(p)}>\r\n                    <div className={S.number}>{p}</div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null\r\n        }\r\n\r\n    })\r\n    const users = props.users.map(u => {\r\n        const followCallback = () => {\r\n            if(u.followed) {\r\n                props.setFollowInProgress(u.id, true)\r\n                usersAPI.unfollowUser(u.id).then(data => {\r\n                    data.resultCode === 0 && props.unfollow(u.id)\r\n                    props.setFollowInProgress(u.id, false)\r\n                })\r\n            } else {\r\n                props.setFollowInProgress(u.id, true)\r\n                usersAPI.followUser(u.id).then(data => {\r\n                    data.resultCode === 0 && props.follow(u.id)\r\n                    props.setFollowInProgress(u.id, false)\r\n                })\r\n\r\n            }\r\n        }\r\n        return (\r\n            <div key={u.id} className={`${S.user_box} ${props.isLoading ? loader.blurScreen : null}`}>\r\n                <div className={S.avatar}>\r\n                    <NavLink to={\"/profile/\" + u.id}>\r\n                        <img src={u.photos.small ? u.photos.small : \"https://goo.su/4zdi\"} alt=\"#\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={S.info}>\r\n                    <NavLink to={\"/profile/\" + u.id}>\r\n                        <div className={S.name}>{u.name}</div>\r\n                    </NavLink>\r\n                    <div className={S.status}>{u.status ? u.status : \"No status\"}</div>\r\n                    <div className={S.follow_button}>\r\n                        <MyButton\r\n                            disabled={props.followInProgress.some(id => id === u.id)}\r\n                            onClick={followCallback}\r\n                        >\r\n                            {u.followed ? \"Unfollow\" : \"Follow\"}\r\n                        </MyButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className={S.users}>\r\n            {props.isLoading && <Preloader/>}\r\n            <h2 className={S.title}>Users</h2>\r\n            {users}\r\n            <div className={S.pageButtons_container}>\r\n                <div className={`${S.pageButton} ${props.checkedPage === 1 ? S.invisibleButton : null}`}\r\n                     onClick={props.previousButtonClick}\r\n                >\r\n                    <div className={S.number}>Back</div>\r\n                </div>\r\n                {pageButtons}\r\n                <div\r\n                    className={`${S.pageButton} ${props.checkedPage >= props.totalCount - 5 ? S.invisibleButton : null}`}\r\n                    onClick={() => props.nextButtonClick(pageQuantity)}\r\n                >\r\n                    <div className={S.number}>Next</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {follow, setCheckedPage, setFollowInProgress, setLoading,\r\n    setMaxRenderPage, setMinRenderPage, setTotalCount,\r\n    setUsers, unfollow, UsersPageType, UserType} from \"../../redux/usersReducer\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {Users} from \"./Users\";\r\n\r\ntype MapStatePropsType = UsersPageType\r\ntype MapDispatchPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setTotalCount: (totalCount: number) => void\r\n    setCheckedPage: (checkedPage: number) => void\r\n    setLoading: (isLoading: boolean) => void\r\n    setFollowInProgress: (userID: number, isLoading: boolean) => void\r\n\r\n    setMinRenderPage: (minRenderPage: number) => void\r\n    setMaxRenderPage: (maxRenderPage: number) => void\r\n}\r\n\r\nexport type UsersPagePropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPagePropsType> {\r\n    componentDidMount() {\r\n        this.props.setLoading(true)\r\n        usersAPI.getUsers(this.props.checkedPage, this.props.pageSize).then(data => {\r\n            this.props.setLoading(false)\r\n            this.props.setUsers(data.items)\r\n            this.props.setTotalCount(data.totalCount)\r\n        })\r\n    }\r\n\r\n    pageButtonClick = (pageNumber: number) => {\r\n        this.props.setCheckedPage(pageNumber)\r\n        this.props.setLoading(true)\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.setLoading(false)\r\n                this.props.setUsers(data.items)\r\n            })\r\n    }\r\n    previousButtonClick = () => {\r\n        this.props.setCheckedPage(this.props.checkedPage - 1)\r\n        this.pageButtonClick(this.props.checkedPage - 1)\r\n        if (this.props.checkedPage - 1 === this.props.minRenderPages) {\r\n            this.props.setMinRenderPage(this.props.minRenderPages - 5)\r\n            this.props.setMaxRenderPage(this.props.maxRenderPages - 5)\r\n        }\r\n    }\r\n    nextButtonClick = (pageQuantity: number) => {\r\n        if (this.props.checkedPage < pageQuantity) {\r\n            this.props.setCheckedPage(this.props.checkedPage + 1)\r\n            this.pageButtonClick(this.props.checkedPage + 1)\r\n            if (this.props.checkedPage === this.props.maxRenderPages) {\r\n                this.props.setMinRenderPage(this.props.minRenderPages + 5)\r\n                this.props.setMaxRenderPage(this.props.maxRenderPages + 5)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Users\r\n                totalCount={this.props.totalCount}\r\n                pageSize={this.props.pageSize}\r\n                maxRenderPages={this.props.maxRenderPages}\r\n                minRenderPages={this.props.minRenderPages}\r\n                checkedPage={this.props.checkedPage}\r\n                pageButtonClick={this.pageButtonClick}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                previousButtonClick={this.previousButtonClick}\r\n                nextButtonClick={this.nextButtonClick}\r\n                isLoading={this.props.isLoading}\r\n                setLoading={this.props.setLoading}\r\n                followInProgress={this.props.followInProgress}\r\n                setFollowInProgress={this.props.setFollowInProgress}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalCount: state.usersPage.totalCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        checkedPage: state.usersPage.checkedPage,\r\n        minRenderPages: state.usersPage.minRenderPages,\r\n        maxRenderPages: state.usersPage.maxRenderPages,\r\n        isLoading: state.usersPage.isLoading,\r\n        followInProgress: state.usersPage.followInProgress\r\n    }\r\n}\r\n\r\nconst dispatch: MapDispatchPropsType = {\r\n    follow, unfollow, setUsers, setTotalCount,\r\n    setCheckedPage, setMinRenderPage, setMaxRenderPage,\r\n    setLoading, setFollowInProgress\r\n}\r\n\r\nexport default connect(mapStateToProps, dispatch)(UsersContainer)","import React from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport {News} from \"./components/News/News\";\nimport {Music} from './components/Music/Music';\nimport {Settings} from \"./components/Settings/Settings\";\nimport {NavbarContainer} from './components/Navbar/NavbarContainer';\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\n\ntype AppPropsType = {\n\n}\n\nfunction App(props: AppPropsType) {\n    return (\n        <div className=\"app-wrapper\">\n            <HeaderContainer />\n            <NavbarContainer />\n            <div className=\"app-wrapper-content\">\n                <Route path=\"/dialogs\" render={() => <DialogsContainer />}/>\n                <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />}/>\n                <Route path=\"/news\" render={() => <News />}/>\n                <Route path=\"/music\" render={() => <Music />}/>\n                <Route path=\"/settings\" render={() => <Settings />}/>\n                <Route path=\"/users\" render={() => <UsersContainer />}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {v1} from \"uuid\";\n\nexport type NavbarType = {\n    id: string\n    title: string\n    path: string\n}\nexport type NavbarMenuType = {\n    navbarItems: Array<NavbarType>\n}\n\nexport type NavbarActionsType = {}\n\nconst initialState: NavbarMenuType = {\n    navbarItems: [\n        {id: v1(), title: \"✓ Profile\", path: \"profile\"},\n        {id: v1(), title: \"✉ Messages\", path: \"dialogs\"},\n        {id: v1(), title: \"☖ News\", path: \"news\"},\n        {id: v1(), title: \"♫ Music\", path: \"music\"},\n        {id: v1(), title: \"✱ Settings\", path: \"settings\"},\n        {id: v1(), title: \"☯ Users\", path: \"users\"}\n    ]\n}\n\nexport const navbarReducer = (state: NavbarMenuType = initialState, action: NavbarActionsType) => {\n    return state;\n}\n","import {combineReducers, createStore} from \"redux\"\nimport {dialogsReducer} from \"./dialogsReducer\";\nimport {profileReducer} from \"./profileReducer\";\nimport {navbarReducer} from \"./navbarReducer\";\nimport {usersReducer} from \"./usersReducer\";\nimport {authReduser} from \"./auth-reducer\";\n\nexport type AppStateType = ReturnType<typeof rootReducer>\n\nconst rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    navbar: navbarReducer,\n    usersPage: usersReducer,\n    auth: authReduser\n})\n\nexport const store = createStore(rootReducer);\n\n//@ts-ignore\nwindow.store = store","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}